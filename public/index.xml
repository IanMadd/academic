<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ian Maddaus on Ian Maddaus</title>
    <link>/</link>
    <description>Recent content in Ian Maddaus on Ian Maddaus</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 -0400</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Passive Voice - This Passive Voice Sentence Was Written By Zombies</title>
      <link>/post/passive-voice/</link>
      <pubDate>Tue, 31 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/passive-voice/</guid>
      <description>

&lt;p&gt;Here are a few articles about using the passive voice. I could provide my own commentary but these articles are better than anything that I would write. In short, people often use the passive voice excessively or incorrectly, but the passive voice is an effective way to describe a passive subject or a victim.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.poynter.org/news/npr-tornado-report-reveals-elements-vivid-newswriting&#34; target=&#34;_blank&#34;&gt;Poynter Institute - NPR tornado report reveals the elements of vivid newswriting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.poynter.org/news/praise-passive-voice&#34; target=&#34;_blank&#34;&gt;Poynter Institute - In praise of the passive voice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.poynter.org/news/blindsided-how-christie-used-passive-verbs-turn-himself-victim&#34; target=&#34;_blank&#34;&gt;Poynter Institute - Blindsided: How Christie used passive verbs to turn himself into a victim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://opinionator.blogs.nytimes.com/2012/04/30/the-pleasures-and-perils-of-the-passive/&#34; target=&#34;_blank&#34;&gt;NY Times - The Pleasures and Perils of the Passive&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;how-to-identify-the-passive-voice&#34;&gt;How To Identify The Passive Voice&lt;/h1&gt;

&lt;p&gt;I was stumped when I first started looking for the passive voice in my own writing. It&amp;rsquo;s easy to recognize when you see it, but it can be hard to find when you don&amp;rsquo;t, even if it&amp;rsquo;s staring you right in the face. These are a few short guidelines for identifying the passive voice.&lt;/p&gt;

&lt;h2 id=&#34;zombies&#34;&gt;Zombies&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;If you can add the phrase &amp;ldquo;by zombies&amp;rdquo; after the verb, you have passive voice.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://twitter.com/johnsonr&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;/post/2018-07-31-passive-voice_files/zombies_passive_voice.png&#34; alt=&#34;by zombies&#34;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Consider the sentence: The child threw the ball. Adding “by zombies” doesn’t make sense: The child threw by zombies. But, adding “by zombies” to the passive voice version of this sentence &amp;mdash; &amp;ldquo;The ball was thrown by the child&amp;rdquo; &amp;mdash; does make sense: The ball was thrown by zombies.&lt;/p&gt;

&lt;h2 id=&#34;subject-verb-object&#34;&gt;Subject Verb Object&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The order of an active voice sentence is subject, verb, object.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The subject of a sentence is usually performing an action on another object. For example: the zombies are eating my brain. The zombies, the subject, are eating, the verb, my brain, the object. If you reverse it you get a passive voice sentence. My brain is being eaten by zombies. See above where I mention the phrase &amp;ldquo;by zombies&amp;rdquo;.&lt;/p&gt;

&lt;h2 id=&#34;by&#34;&gt;&amp;ldquo;by &amp;hellip;&amp;rdquo;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;A passive voice sentence often ends with &amp;ldquo;by &amp;hellip;&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example: &amp;ldquo;My brain was eaten by zombies.&amp;rdquo;&lt;/p&gt;

&lt;h2 id=&#34;to-be-followed-by-ed&#34;&gt;To be, followed by &amp;ldquo;&amp;hellip;ed&amp;rdquo;&lt;/h2&gt;

&lt;p&gt;When newspapers reported that Mark Twain had died, he sent a telegram from London stating, &amp;ldquo;THE REPORTS OF MY DEATH ARE GREATLY EXAGGERATED&amp;rdquo;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How To Manage Multiple Versions of Python on a Mac</title>
      <link>/post/manage-multiple-versions-python-mac/</link>
      <pubDate>Thu, 26 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/manage-multiple-versions-python-mac/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#summary&#34;&gt;Summary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#warnings&#34;&gt;Warnings&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#mac-os-needs-python&#34;&gt;Mac OS needs python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#other-projects-may-need-specific-versions-of-python&#34;&gt;Other projects may need specific versions of python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#installation&#34;&gt;Installation&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#python.org&#34;&gt;&lt;a href=&#34;python.org&#34; class=&#34;uri&#34;&gt;python.org&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#homebrew&#34;&gt;&lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#anaconda&#34;&gt;&lt;a href=&#34;https://www.anaconda.com&#34;&gt;Anaconda&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#path-and-.bash_profile&#34;&gt;PATH and .bash_profile&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#path&#34;&gt;PATH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#bash_profile&#34;&gt;.bash_profile&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#homebrew---pyenv&#34;&gt;Homebrew - pyenv&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#pyenv-local&#34;&gt;Pyenv Local&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pyenv-global&#34;&gt;Pyenv Global&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#locate-python&#34;&gt;Locate Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#uninstall-python&#34;&gt;Uninstall python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#python.org-1&#34;&gt;python.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#homebrew-1&#34;&gt;Homebrew&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#uninstall-python-from-pyenv&#34;&gt;Uninstall Python from Pyenv&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#anaconda-1&#34;&gt;Anaconda&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#additional-resources&#34;&gt;Additional Resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#xkcd&#34;&gt;XKCD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;summary&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Summary&lt;/h1&gt;
&lt;p&gt;It’s easy to install multiple versions of python on a Mac computer using installers from &lt;a href=&#34;http://www.python.org&#34;&gt;python.org&lt;/a&gt;, &lt;a href=&#34;http://brew.sh&#34;&gt;Homebrew&lt;/a&gt;, &lt;a href=&#34;https://www.anaconda.com&#34;&gt;Conda&lt;/a&gt;, or other sources. This could create conflicts if a user wants to run one version of python but bash calls a different version instead.&lt;/p&gt;
&lt;p&gt;This is guide will show you how to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;modify your bash profile to change which version of python is called by bash first.&lt;/li&gt;
&lt;li&gt;use virtual environments to specify a version of python that will run a project.&lt;/li&gt;
&lt;li&gt;uninstall specific versions of python.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;warnings&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Warnings&lt;/h1&gt;
&lt;hr /&gt;
&lt;div id=&#34;mac-os-needs-python&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Mac OS needs python&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;DO NOT&lt;/strong&gt; remove any versions of Python found in the following folders:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/usr/bin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system/Library&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These versions of Python—which should be Python 2.7—are installed by Apple and used by Mac OS and other software to perform some functions. Deleting Python from these directories will break Mac OS and force you to reinstall it on your computer.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;other-projects-may-need-specific-versions-of-python&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Other projects may need specific versions of python&lt;/h3&gt;
&lt;p&gt;You may have a python project or you may use python packages that require particular versions of Python. Uninstalling those versions would prevent those projects or packages from working until that version of python is reinstalled. For example, Python 3 is a dependency of Numpy; if you uninstalled Python 3, then Numpy wouldn’t work until you reinstalled Python 3.&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;installation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Installation&lt;/h1&gt;
&lt;p&gt;Three common methods of installing python can be found here:&lt;/p&gt;
&lt;div id=&#34;python.org&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;a href=&#34;python.org&#34; class=&#34;uri&#34;&gt;python.org&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The python.org installer can be found &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;homebrew&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;First install Homebrew. The instructions are &lt;a href=&#34;https://brew.sh&#34;&gt;here&lt;/a&gt;, or enter the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/usr/bin/ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;To install Python 3:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install python&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To install Python 2:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install python@2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;anaconda&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;a href=&#34;https://www.anaconda.com&#34;&gt;Anaconda&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Anaconda is generally used for scientific and machine learning applications.&lt;/p&gt;
&lt;p&gt;For &lt;strong&gt;Ananconda&lt;/strong&gt; follow installation instructions &lt;a href=&#34;https://www.anaconda.com/download/#macos&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Miniconda is a stripped down version of Anaconda.&lt;/p&gt;
&lt;p&gt;For &lt;strong&gt;Miniconda&lt;/strong&gt; follow installation instructions &lt;a href=&#34;https://conda.io/docs/user-guide/install/index.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;path-and-.bash_profile&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;PATH and .bash_profile&lt;/h1&gt;
&lt;div id=&#34;path&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;PATH&lt;/h2&gt;
&lt;p&gt;The path is a list of directories that your shell will look through when you execute a command. You can display the path on your computer using the &lt;code&gt;echo $PATH&lt;/code&gt; command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ echo $PATH

/Library/Frameworks/Python.framework/Versions/3.7/bin:/Users/username/anaconda3/bin:/Library/Frameworks/Python.framework/Versions/2.7/bin:/Users/username/miniconda2/bin:/Users/username/miniconda3/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/usr/X11/bin:/usr/local/git/bin&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The directories above are separated by a colon, this is what they look like displayed in sequence:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/Library/Frameworks/Python.framework/Versions/3.7/bin&lt;/li&gt;
&lt;li&gt;/Users/username/anaconda3/bin&lt;/li&gt;
&lt;li&gt;/Library/Frameworks/Python.framework/Versions/2.7/bin&lt;/li&gt;
&lt;li&gt;/Users/username/miniconda2/bin&lt;/li&gt;
&lt;li&gt;/Users/username/miniconda3/bin&lt;/li&gt;
&lt;li&gt;/Library/Frameworks/Python.framework/Versions/3.6/bin&lt;/li&gt;
&lt;li&gt;/usr/local/bin&lt;/li&gt;
&lt;li&gt;/usr/bin&lt;/li&gt;
&lt;li&gt;/bin&lt;/li&gt;
&lt;li&gt;/usr/sbin&lt;/li&gt;
&lt;li&gt;/sbin&lt;/li&gt;
&lt;li&gt;/usr/texbin&lt;/li&gt;
&lt;li&gt;/opt/X11/bin&lt;/li&gt;
&lt;li&gt;/usr/X11/bin&lt;/li&gt;
&lt;li&gt;/usr/local/git/bin&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When you ask your shell to run a particular command or run an interpreter, &lt;code&gt;python&lt;/code&gt; for example, the shell looks through the different directories listed in the PATH in order they’re presented above. When the shell finds that command, it stops and calls it even if there is another version of the same command, with the same name, further down in the list.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;bash_profile&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;.bash_profile&lt;/h2&gt;
&lt;p&gt;The bash profile is a set of instructions that are run by the shell when the user logs in to bash. You can add a &lt;a href=&#34;http://osxdaily.com/2011/10/03/add-a-separator-time-stamp-between-terminal-commands-to-increase-readability/&#34;&gt;variety&lt;/a&gt; of &lt;a href=&#34;https://natelandau.com/my-mac-osx-bash_profile/&#34;&gt;preferences&lt;/a&gt; to the bash profile, including modifications to the PATH. When anaconda, miniconda or other versions of python are installed they automatically add paths to their respective versions of python to the top of the bash profile.&lt;/p&gt;
&lt;p&gt;Bash reads the bash profile in sequential order — from top to bottom — and adds those paths to the PATH in the order that they’re read. This means that the &lt;em&gt;last&lt;/em&gt; path at the bottom of the bash profile will end up as the &lt;em&gt;first&lt;/em&gt; path in the PATH. This means that if you have Python 3.6 installed on your computer, and then decide to add python 3.7, but keep 3.6, the installer will add Python 3.7 to the top of the bash profile but it will end up &lt;em&gt;after&lt;/em&gt; python 3.6 in the PATH. Entering &lt;code&gt;python3&lt;/code&gt; in bash will call python 3.6, &lt;em&gt;not&lt;/em&gt; 3.7.&lt;/p&gt;
&lt;p&gt;If that was confusing compare the order that the python paths are added to my bash profile below to the PATH listed above. You’ll notice that their respective orders are opposite from each other.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Enter the following command to open the bash profile in TextEdit:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ open ~/.bash_profile&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;My .bash_profile currently looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Setting PATH for Python 3.6
# The original version is saved in .bash_profile.pysave
PATH=&amp;quot;/Library/Frameworks/Python.framework/Versions/3.6/bin:${PATH}&amp;quot;
export PATH

# added by Miniconda3 installer
export PATH=&amp;quot;/Users/username/miniconda3/bin:$PATH&amp;quot;

# added by Miniconda2 installer
export PATH=&amp;quot;/Users/username/miniconda2/bin:$PATH&amp;quot;

# Setting PATH for Python 2.7
# The original version is saved in .bash_profile.pysave
PATH=&amp;quot;/Library/Frameworks/Python.framework/Versions/2.7/bin:${PATH}&amp;quot;
export PATH

# added by Anaconda3 installer
export PATH=&amp;quot;/Users/username/anaconda3/bin:$PATH&amp;quot;

# Setting PATH for Python 3.7
# The original version is saved in .bash_profile.pysave
PATH=&amp;quot;/Library/Frameworks/Python.framework/Versions/3.7/bin:${PATH}&amp;quot;
export PATH&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want to keep all of your installed versions of python, but want bash to open a different version first, just copy and paste it to the &lt;strong&gt;bottom&lt;/strong&gt; of the bash profile. If you don’t want bash to run a particular version of python then delete it from bash profile and uninstall that version by following the instructions further down.&lt;/p&gt;
&lt;p&gt;Don’t forget to save the bash profile before closing TextEdit. You also have to reload the bash profile in bash before any changes take effect. Just enter one of the following commands:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;source ~/.bash_profile&lt;/code&gt;&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;. ~/.bash_profile&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;homebrew---pyenv&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Homebrew - pyenv&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/pyenv/pyenv&#34;&gt;Pyenv&lt;/a&gt; is a &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt; package that allows a user to install multiple versions of python in Homebrew and specify which version of python they’d like to run.&lt;/p&gt;
&lt;p&gt;Install pyenv:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ brew install pyenv&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Install different versions of python:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pyenv install 3.5.0
$ pyenv install 3.6.0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Show which versions of python are installed:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pyenv versions

* system (set by /Users/username/Programming/python/.python-version)
  3.5.0
  3.6.0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The asterisk indicates that the system version of python is active, but 3.5.0 and 3.6.0 are also installed.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;pyenv-local&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Pyenv Local&lt;/h2&gt;
&lt;p&gt;Create a folder called &lt;code&gt;PythonLocalProject&lt;/code&gt;, then display the version of python called by bash by entering &lt;code&gt;python -V&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ python -V
Python 3.6.5 :: Anaconda, Inc.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now enter:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pyenv local 3.5.0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This creates a &lt;code&gt;.python-version&lt;/code&gt; file which tells &lt;code&gt;pyenv&lt;/code&gt; which version of python to run in that directory.&lt;/p&gt;
&lt;p&gt;Entering &lt;code&gt;ls -la&lt;/code&gt; shows us that file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ls -la
total 8
drwxr-xr-x  3 username  staff   96 Aug  3 11:52 .
drwxr-xr-x  4 username  staff  128 Aug  3 11:56 ..
-rw-r--r--  1 username  staff    6 Aug  3 12:03 .python-version&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now enter &lt;code&gt;pyenv versions&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pyenv versions
  system
* 3.5.0 (set by /Users/username/Programming/python/pythonproject/.python-version)
  3.6.0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And running this command shows which version of python is called by pyenv:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ python -V
Python 3.5.0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To change pyenv to the system version of version 3.6.0 enter:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pyenv local system
$ pyenv local 3.6.0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This procedure is fine, you can set a version of python to run in a particular folder. But what if you want to use pyenv to set a global version of python.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;pyenv-global&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Pyenv Global&lt;/h2&gt;
&lt;p&gt;Pyenv gives these instructions when you enter &lt;code&gt;pyenv init&lt;/code&gt; in bash:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pyenv init

# Load pyenv automatically by appending
# the following to ~/.bash_profile:

eval &amp;quot;$(pyenv init -)&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Open the bash profile:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;open ~/.bash_profile&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Add this text to the bottom of the file:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;eval &amp;quot;$(pyenv init -)&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Save the file and then enter:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;source ~/.bash_profile&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Entering &lt;code&gt;echo $PATH&lt;/code&gt; will show that a pyenv shim has been added to the beginnning of the path:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/Users/username/.pyenv/shims:&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And &lt;code&gt;which python&lt;/code&gt; will return:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/Users/username/.pyenv/shims/python&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This means that bash will run the version of python set by pyenv.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Navigate to a folder that doesn’t have a &lt;code&gt;.python-version&lt;/code&gt; file and enter:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pyenv global 3.6.0
Python 3.6.0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This shows us that the global version of python is 3.6.0 and it is set by &lt;code&gt;pyenv&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So this shows that bash will run whichever version of python that is set in pyenv.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;If you navigate back to the &lt;code&gt;PythonLocalProject&lt;/code&gt; folder with the &lt;code&gt;.python-version&lt;/code&gt; file and run &lt;code&gt;python -V&lt;/code&gt; you will notice that it doesn’t run the global version of python, it runs whichever version was last set with the &lt;code&gt;pyenv local&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;locate-python&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Locate Python&lt;/h1&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;We can use the &lt;code&gt;which&lt;/code&gt; command to identify where specific versions of python are located:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ which -a python
/Users/username/.pyenv/shims/python
/Users/username/anaconda3/bin/python
/Library/Frameworks/Python.framework/Versions/2.7/bin/python
/Users/username/miniconda2/bin/python
/Users/username/miniconda3/bin/python
/usr/local/bin/python
/usr/bin/python


$ which -a python3
/Users/username/.pyenv/shims/python3
/Library/Frameworks/Python.framework/Versions/3.7/bin/python3
/Users/username/anaconda3/bin/python3
/Users/username/miniconda3/bin/python3
/Library/Frameworks/Python.framework/Versions/3.6/bin/python3
/usr/local/bin/python3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This shows some overlap as some versions of python appear in both searches.&lt;/p&gt;
&lt;p&gt;The locations of the anaconda and miniconda versions of python are self explanatory, so are the pyenv installs, the python.org installer places python in the &lt;code&gt;/Library/Frameworks/Python.framework/&lt;/code&gt; directory. Homebrew installs all packages, including python, in &lt;code&gt;/usr/local/Cellar&lt;/code&gt;, then Homebrew adds a symlink to &lt;code&gt;/usr/local/bin&lt;/code&gt;so that it’s version of python can be found in the path. Finally, Apple installs python in &lt;code&gt;/usr/bin&lt;/code&gt;. Remember, don’t delete that version.&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;uninstall-python&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Uninstall python&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;Follow these instructions if you want to remove particular versions of python. &lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;python.org-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;python.org&lt;/h2&gt;
&lt;p&gt;The python.org installer places all it’s installed files in the following folders:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The system applications folder, &lt;code&gt;/Applications&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/Library/Frameworks/Python.framework&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/usr/local/bin&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To delete all versions of python that were installed using the python.org installer, enter these commands in terminal:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo rm -rf &amp;#39;/Applications/Python X.Y&amp;#39; #replace X.Y with the version number on the folder
sudo rm -rf /Library/Frameworks/Python.framework
sudo rm -rf /usr/local/bin/python
sudo rm -rf /usr/local/bin/python3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To remove particular versions of python, you have to refer to the particular framework. The frameworks are installed in &lt;code&gt;/Library/Frameworks/Python.framework&lt;/code&gt; and particular versions are found in &lt;code&gt;/Library/Frameworks/Python.framework/Versions/X.Y&lt;/code&gt;. So for example if you wanted to uninstall only version 3.5 but leave other versions you would enter the following commands in bash:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo rm -rf /Library/Frameworks/Python.framework/Versions/3.5
sudo rm -rf &amp;#39;/Applications/Python 3.5&amp;#39;
sudo rm -rf /usr/local/bin/python3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;homebrew-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Homebrew&lt;/h2&gt;
&lt;p&gt;To uninstall python that was installed using homebrew you need to identify what versions of python have been installed by Homebrew:&lt;/p&gt;
&lt;p&gt;Enter:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ brew list | grep &amp;#39;python&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Currently brew refers to python3 as &lt;code&gt;python&lt;/code&gt; and python 2 is called &lt;code&gt;python@2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To uninstall both python2 and python3 enter the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ brew uninstall -f python python@2 &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Homebrew will refuse to uninstall python if it has dependencies, just uninstall python and ignore the dependencies:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew uninstall --ignore-dependencies python python@2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or, add the dependencies to the list of items to be uninstalled:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ brew uninstall -f python python@2 gdal geos libspatialite libxml2 numpy&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;troubleshooting&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Troubleshooting&lt;/h3&gt;
&lt;p&gt;It’s possible to have Homebrew’s Python directory at the beginning of the $PATH but calling &lt;code&gt;python&lt;/code&gt; will still start the Apple installed version of Python or some other version. If that’s the case it’s possible that Homebrew’s Python install has become unlinked. This command will unlink and relink Python in Homebrew:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew unlink python python@2 &amp;amp;&amp;amp; brew link python python@2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;uninstall-python-from-pyenv&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Uninstall Python from Pyenv&lt;/h3&gt;
&lt;p&gt;To list versions of python installed using pyenv enter:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pyenv versions
* system (set by /Applications/.python-version)
  3.5.0
  3.6.0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To uninstall versions of python installed using pyenv enter:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pyenv uninstall 3.5.0
$ pyenv uninstall 3.6.0&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;anaconda-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Anaconda&lt;/h2&gt;
&lt;p&gt;The official removal instructions are found &lt;a href=&#34;https://conda.io/docs/user-guide/install/macos.html#&#34;&gt;here&lt;/a&gt;, but deleting anaconda and miniconda is easy.&lt;/p&gt;
&lt;p&gt;Anaconda and miniconda are installed in the users home directory: &lt;code&gt;~/miniconda2&lt;/code&gt;, &lt;code&gt;~/miniconda3&lt;/code&gt;,&lt;code&gt;~/anaconda2&lt;/code&gt;, or &lt;code&gt;~/anaconda3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Depending on which version or versions you have, just enter the following commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rm -rf ~/anaconda2
rm -rf ~/anaconda3
rm -rf ~/miniconda2
rm -rf ~/miniconda3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Anaconda and miniconda also use several invisible files. Delete them by entering this command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rm -rf ~/.condarc ~/.conda ~/.continuum&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;additional-resources&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Additional Resources&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.anaconda.com&#34;&gt;Anaconda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.python.org&#34;&gt;python.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pyenv/pyenv&#34;&gt;pyenv package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pyenv/pyenv/blob/master/COMMANDS.md&#34;&gt;pyenv commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/python/cpython/blob/master/Mac/README&#34;&gt;Python Removal Instructions&lt;/a&gt; - towards the bottom of the README file.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://osxdaily.com/2018/07/05/where-homebrew-packages-installed-location-mac/&#34;&gt;OS X Daily - How to Find Where Homebrew Packages Are Installed on Mac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://conda.io/docs/user-guide/install/macos.html#&#34;&gt;Official Conda Uninstall Instructions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://realpython.com/python-virtual-environments-a-primer/#using-different-versions-of-python&#34;&gt;Real Python - Python Virtual Environments&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;xkcd&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;XKCD&lt;/h1&gt;
&lt;p&gt;And now for something completely different.&lt;/p&gt;
&lt;div style=&#34;text-align:center&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://xkcd.com/1987/&#34;&gt;&lt;img src=&#34;https://imgs.xkcd.com/comics/python_environment.png&#34; alt=&#34;The Python Environment&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Guides For Learning Git &amp; Github</title>
      <link>/post/guides-for-learning-git/</link>
      <pubDate>Wed, 25 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/guides-for-learning-git/</guid>
      <description>&lt;p&gt;These are five great guides to using git:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://happygitwithr.com&#34; target=&#34;_blank&#34;&gt;Happy Git With R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://swcarpentry.github.io/git-novice/&#34; target=&#34;_blank&#34;&gt;Data Carpentry - Version Control with Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rstudio.com/resources/webinars/rstudio-essentials-webinar-series-managing-part-2/&#34; target=&#34;_blank&#34;&gt;RStudio Webinar - Managing Github and RStudio.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gitimmersion.com&#34; target=&#34;_blank&#34;&gt;Git Immersion&lt;/a&gt; - use git in the command line.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://guides.github.com/activities/hello-world/&#34; target=&#34;_blank&#34;&gt;Github Guides - Hello World&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Another Note on A blogdown Tutorial</title>
      <link>/post/another-note/</link>
      <pubDate>Wed, 14 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/another-note/</guid>
      <description>&lt;p&gt;I just discovered &lt;a href=&#34;https://apreshill.rbind.io/post/up-and-running-with-blogdown/&#34; target=&#34;_blank&#34;&gt;an awesome tutorial&lt;/a&gt; on &lt;strong&gt;blogdown&lt;/strong&gt; written by Alison. I have to admit this is &lt;em&gt;the&lt;/em&gt; best &lt;strong&gt;blogdown&lt;/strong&gt; tutorial I have seen so far.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://apreshill.rbind.io/img/posts/2017-06-12-up-and-running-with-blogdown/blogdown-signpost-4.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Quick Note on Two Beautiful Websites</title>
      <link>/post/a-quick-note/</link>
      <pubDate>Tue, 13 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/a-quick-note/</guid>
      <description>&lt;p&gt;To me, the two most impressive websites based on &lt;strong&gt;blogdown&lt;/strong&gt; are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://robjhyndman.com&#34; target=&#34;_blank&#34;&gt;Rob J Hyndman&lt;/a&gt;&amp;rsquo;s personal website.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://livefreeordichotomize.com&#34; target=&#34;_blank&#34;&gt;Live Free or Dichotomize&lt;/a&gt; by Lucy and Nick &lt;em&gt;et al&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I&amp;rsquo;m sure there will be more.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Central Limit Theorem</title>
      <link>/portfolio/central_limit_theorem/</link>
      <pubDate>Sun, 12 Mar 2017 00:00:00 -0500</pubDate>
      
      <guid>/portfolio/central_limit_theorem/</guid>
      <description>

&lt;h1 id=&#34;purpose&#34;&gt;Purpose&lt;/h1&gt;

&lt;p&gt;This will demonstrate what the Central Limit Theorem is, why it is significant, and what conclusions you can draw from sampled data.&lt;/p&gt;

&lt;h1 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#mean_sample_means&#34;&gt;Mean of Sample Means&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#standard_error_mean&#34;&gt;Standard Error of the Mean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sampling_error&#34;&gt;Sampling Error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#number_sample_means&#34;&gt;Number of Sample Means&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#example&#34;&gt;An Example with Temperature Data&lt;/a&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#prepare_data&#34;&gt;Prepare Temperature Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#plotting_temp_data&#34;&gt;Plot Temperature Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#example_sample_means&#34;&gt;Sample Means&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#example_sampling_error&#34;&gt;Sampling Error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#example_mean_of_sample_means&#34;&gt;Mean of Sample Means&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#central_limit_theorem_zvalues&#34;&gt;Central Limit Theorem and Z-Values&lt;/a&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#sample_size_lessthan_30&#34;&gt;Sample Size Less Than 30&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#example_zscore_weather_data&#34;&gt;Example: Z-Score with Weather Data&lt;/a&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#pnorm_function&#34;&gt;Using Pnorm Function&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#smaller_sample_size&#34;&gt;Smaller Sample Size&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#finite_population_correction_factor&#34;&gt;Finite Population Correction Factor&lt;/a&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#population_size_and_pop_corr_factor&#34;&gt;Population Size and Population Correction Factor&lt;/a&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#small_n&#34;&gt;Small N&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#large_n&#34;&gt;Large N&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#no_correction_factor&#34;&gt;No Correction Factor&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#example2&#34;&gt;Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#simulate&#34;&gt;Simulating the Central Limit Theorem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#additional_sources&#34;&gt;Additional Sources&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;The Central Limit Theorem is one of the most important concepts in inferential statistics.&lt;/p&gt;

&lt;p&gt;It states that if you have a population with a mean $\mu$ and a standard deviation $\sigma$ and you take many sufficiently large samples with replacement from a population, the means of those samples will approach a normal distribution regardless of the distribution of the population. Further the &lt;em&gt;mean of these sample means&lt;/em&gt; will approach the population mean as the number of samples approaches infinity and it&amp;rsquo;s standard deviation will shrink as its sample size increases.&lt;/p&gt;

&lt;p&gt;Sample sizes of 30 or more ($n \geq 30$) are considered sufficiently large unless you know the population is normally distributed, in which case smaller sample sizes are acceptable. However the population distribution will affect the sample size necessary to produce a normal distribution&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;mean_sample_means&#34;&gt;Mean of Sample Means&lt;/h2&gt;

&lt;p&gt;As the the number of sample means approach infinity the mean of the sampled means will have the same mean as the population.&lt;/p&gt;

&lt;p&gt;$$\text{mean of sample means} = \text{population mean}$$&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;strong&gt;OR&lt;/strong&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;$$\mu_{\bar{X}} = \mu$$&lt;/p&gt;

&lt;p&gt;Where:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;$\bar{X}$ is a sample mean&lt;/li&gt;
&lt;li&gt;$\mu_{\bar{X}}$ is the mean of the sample means&lt;/li&gt;
&lt;li&gt;$\mu$ is the population mean&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;standard_error_mean&#34;&gt;Standard Error of the Mean&lt;/h2&gt;

&lt;p&gt;The standard deviation of the sample means is also called the &lt;strong&gt;standard error of the mean.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The standard deviation of the sample data will be equal to standard deviation of the population divided by the square root of the sample size, or:&lt;/p&gt;

&lt;p&gt;$$\text{standard error of the mean} = \frac{\text{population standard deviation}}{\sqrt{\text{sample size}}}$$&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;strong&gt;or&lt;/strong&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;$$\sigma_{\bar{X}} = \frac{\sigma}{\sqrt{n}}$$&lt;/p&gt;

&lt;p&gt;Where:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;$\sigma_{\bar{M}}$ is the standard error of the mean&lt;/li&gt;
&lt;li&gt;$\sigma$ is the standard deviation of the population&lt;/li&gt;
&lt;li&gt;n is the sample size&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;The standard error of the mean will get smaller as the sample size increases. A smaller standard error would indicate that the sample data is more representative of the total population. For example if we had identical standard deviations for two different populations but different sample sizes, then the standard error of the mean would be smaller for the set with a larger sample size.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;You can use the standard error of the mean draw inferences about the population data from a sample. This is useful in the many many situations where it would be impossible to measure every individual from a population. For example if we 30 sets of fifty samples from a population, we can take the standard deviation of the means of those samples and find a population standard deviation.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;sampling_error&#34;&gt;Sampling Error&lt;/h2&gt;

&lt;p&gt;Sampling error is the difference between the actual population data and the same measure of the sampled data. For example the mean of each sample will be different from the mean of the population data.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Sampling_error&#34; target=&#34;_blank&#34;&gt;From wikipedia:&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Since the sample does not include all members of the population, statistics on the sample, such as means and quantiles, generally differ from the characteristics of the entire population, which are known as parameters.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;number_sample_means&#34;&gt;Number of Sample Means&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;When the population data is normally distributed then the sample means will also be normally distributed.&lt;/li&gt;
&lt;li&gt;When the population data is not normally distributed then at least 30 sample means will have to be made for the sample means to be normally distributed. This is because of sampling error.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;an-example-with-dice&#34;&gt;An Example With Dice&lt;/h1&gt;

&lt;p&gt;Consider an example with a die. A die has an equal probability of landing on any side so the probability distribution is uniform. But, taking the mean of multiple samples produces a normal distribution.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;die &amp;lt;- 1:6
die_rolls &amp;lt;- NULL

for (i in 1:1000){
    die_rolls &amp;lt;- append(die_rolls, mean(sample(die, 30, replace = TRUE)))
}

hist(die_rolls)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/portfolio/Central_Limit_Theorem_files/die_roll_histogram.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;example&#34;&gt;An Example: Temperature Data&lt;/h1&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;This example will sample from population data to demonstrate that a non-normal population will appear normal when sampled, that the sample means will converge around the population mean, and that the standard deviation of the sample means is equal to the population standard deviation divided by the square root of the sample size.&lt;/p&gt;

&lt;p&gt;This example uses historical data from the &lt;a href=&#34;https://www.ncdc.noaa.gov/data-access/land-based-station-data/land-based-datasets/us-historical-climatology-network-ushcn&#34; target=&#34;_blank&#34;&gt;United States Historical Climatology Network&lt;/a&gt;. The data set contains daily high temperatures in Farmington, Maine from 1911 through 2010. &lt;a href=&#34;/data/ME_2765tmax.txt&#34;&gt;Download the data here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The variables/columns in the data file are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Station number (i.e., 172765: 2-digit state code, followed by 4-digit station code)&lt;/li&gt;
&lt;li&gt;Day of year (1-365)&lt;/li&gt;
&lt;li&gt;Month&lt;/li&gt;
&lt;li&gt;Day of Month&lt;/li&gt;
&lt;li&gt;Year the daily record was set&lt;/li&gt;
&lt;li&gt;Daily Temperature High&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;prepare_data&#34;&gt;Prepare the Data&lt;/h2&gt;

&lt;p&gt;First load the following packages:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;library(data.table)
library(ggplot2)
library(easyGgplot2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;
Then import the data.
&lt;br&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Station172765_TMax&amp;lt;- data.table(read.table(&amp;quot;/data/ME_2765tmax.txt&amp;quot;, header = FALSE))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The columns are labeled &amp;ldquo;V1&amp;rdquo; through &amp;ldquo;V6&amp;rdquo; so replace the column names with more descriptive names.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;setnames(Station172765_TMax, c(&amp;quot;V1&amp;quot;, &amp;quot;V2&amp;quot;, &amp;quot;V3&amp;quot;, &amp;quot;V4&amp;quot;, &amp;quot;V5&amp;quot;, &amp;quot;V6&amp;quot;), c(&amp;quot;StationID&amp;quot;, &amp;quot;YearDay&amp;quot;, &amp;quot;Year&amp;quot;, &amp;quot;Month&amp;quot;, &amp;quot;MonthDay&amp;quot;, &amp;quot;MaxTemp&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On days that no data was collected the temperature is recorded as -999, change that to NA.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Station172765_TMax[MaxTemp == -999, MaxTemp := NA]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now view the dataset:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Station172765_TMax

##        StationID YearDay Year Month MonthDay MaxTemp
##     1:    172765       1 1911     1        1      18
##     2:    172765       2 1911     1        2      36
##     3:    172765       3 1911     1        3      38
##     4:    172765       4 1911     1        4      35
##     5:    172765       5 1911     1        5      17
##    ---                                              
## 36496:    172765     361 2010    12       27      25
## 36497:    172765     362 2010    12       28      26
## 36498:    172765     363 2010    12       29      24
## 36499:    172765     364 2010    12       30      32
## 36500:    172765     365 2010    12       31      44
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;plotting_temp_data&#34;&gt;Plotting Temperature Data&lt;/h2&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;This plot shows the temperature highs with the day of the year on the x-axis and the temperature on the y-axis:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;p &amp;lt;- ggplot(Station172765_TMax, aes(YearDay, MaxTemp))
p + geom_point() 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/portfolio/Central_Limit_Theorem_files/172765_temp_xy.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;The histogram of the data shows that it&amp;rsquo;s bimodal:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hist(Station172765_TMax[,MaxTemp], xlab=&amp;quot;Temp&amp;quot;, main=&amp;quot;Frequency Max Temp - Farmington, ME, 1911 - 2010&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/portfolio/Central_Limit_Theorem_files/172765_temp_histogram.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;example_sample_means&#34;&gt;Sample Means&lt;/h2&gt;

&lt;p&gt;This will return a data table called &lt;code&gt;SampleMeans&lt;/code&gt; with four columns of 1000 sample means each; each sample mean will come from 2, 10, 30 or 50 samples from the temperature data set.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SampleMeans &amp;lt;- NULL
Means &amp;lt;- NULL


## Sample Size of 2
for (i in 1:200){
    Means &amp;lt;- append(Means, mean(Station172765_TMax[,sample(MaxTemp,2)], na.rm=TRUE))
}

SampleMeans &amp;lt;- data.table(SampleSize2 = Means)

##Sample Size of 10
Means &amp;lt;- NULL
for (i in 1:200){
    Means &amp;lt;- append(Means, mean(Station172765_TMax[,sample(MaxTemp,10)], na.rm=TRUE))
}
SampleMeans[,SampleSize10 := Means]

##Sample Size of 30
Means &amp;lt;- NULL
for (i in 1:200){
    Means &amp;lt;- append(Means, mean(Station172765_TMax[,sample(MaxTemp,30)], na.rm=TRUE))
}

SampleMeans[,SampleSize30 := Means]

##Sample Size of 50

Means &amp;lt;- NULL
for (i in 1:200){
    Means &amp;lt;- append(Means, mean(Station172765_TMax[,sample(MaxTemp,50)], na.rm=TRUE))

}
SampleMeans[,SampleSize50 := Means]

SampleMeans

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;example_sampling_error&#34;&gt;Sampling Error of Sample Means&lt;/h2&gt;

&lt;p&gt;This dataset shows that there can be substantial variability in the sample means, but as the sample size increases the variability of the sample mean declines and the sample means come closer to the true population mean. In this case the sample means are clustering around ~54.5 for a population mean.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;head(SampleMeans)

   SampleSize2 SampleSize10 SampleSize30 SampleSize50
1:        54.5         48.1     61.07143     53.86000
2:        32.5         48.5     50.86667     59.22000
3:        73.0         54.2     56.86667     57.10000
4:        54.5         55.6     50.00000     54.59184
5:        49.0         58.7     61.90000     56.38000
6:        57.5         37.0     53.40000     55.82000
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;example_mean_of_sample_means&#34;&gt;Mean of Sample Means&lt;/h2&gt;

&lt;p&gt;Taking the mean of all of the sample means shows that they are fairly close to the population mean.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sapply(SampleMeans, mean)

 SampleSize2 SampleSize10 SampleSize30 SampleSize50 
    54.75500     54.48744     54.47269     54.25413 

Station172765_TMax[, mean(MaxTemp, na.rm = TRUE)]

## [1] 54.45328
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;standard-error-of-the-mean&#34;&gt;Standard Error of the Mean&lt;/h2&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;The standard deviation of the sample means, also called the &lt;em&gt;standard error of the mean&lt;/em&gt; is much smaller with a larger sample size and much larger with a small sample size.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sapply(SampleMeans, sd) 

## SampleSize2 SampleSize10 SampleSize30 SampleSize50 
##   13.695907     6.553337     3.999041     3.223173 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Also notice that the standard deviation of the sample means is approximately equal to the standard deviation of the population data divided by the square root of the sample size. Compare the standard deviations above to the population standard deviation divided by the square root of the sample size below.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Station172765_TMax[, sd(MaxTemp, na.rm = TRUE)]/sqrt(2)
## [1] 14.93637

Station172765_TMax[, sd(MaxTemp, na.rm = TRUE)]/sqrt(5)
## [1] 6.679747

Station172765_TMax[, sd(MaxTemp, na.rm = TRUE)]/sqrt(25)
## [1] 3.856554

Station172765_TMax[, sd(MaxTemp, na.rm = TRUE)]/sqrt(49)
## [1] 2.987274
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;
Without a complete data set for this weather data, you could take the standard deviation of the sample means and multiply it by the square root of our sample size to get the standard deviation of the population.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SampleMeans[,sd(SampleSize49)] * sqrt(49) 
## [1] 22.79128

Station172765_TMax[, sd(MaxTemp, na.rm = TRUE)] 
## [1] 21.12321
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;plot-sample-means&#34;&gt;Plot Sample Means&lt;/h2&gt;

&lt;p&gt;&lt;br&gt;
Plotting the SampleMeans data as a density plot shows that this sampled data looks like a normal distribution even though the original data was bimodal. You can also see that the standard error is much larger for the sample means with the smaller sample size.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DT1 &amp;lt;- data.table(SampleSize = &amp;quot;SampleSize2&amp;quot;,SampleMeans = SampleMeans$SampleSize2) 
DT2 &amp;lt;- data.table(SampleSize = &amp;quot;SampleSize10&amp;quot;,SampleMeans = SampleMeans$SampleSize10) 
DT3 &amp;lt;- data.table(SampleSize = &amp;quot;SampleSize30&amp;quot;,SampleMeans = SampleMeans$SampleSize30) 
DT4 &amp;lt;- data.table(SampleSize = &amp;quot;SampleSize50&amp;quot;,SampleMeans = SampleMeans$SampleSize50) 

MeltedSampleMeans &amp;lt;- rbindlist(l=list(DT1, DT2, DT3, DT4))

p &amp;lt;- ggplot(MeltedSampleMeans, aes(SampleMeans, fill=SampleSize,color=SampleSize))
p + geom_density(alpha = 0.1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/portfolio/Central_Limit_Theorem_files/sample_means_hist.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;central_limit_theorem_zvalues&#34;&gt;Cental Limit Theorem Z-Values&lt;/h1&gt;

&lt;p&gt;If the number of samples is large enough, ie more than 30, then conclusions can be made about the sample means in the same way that conclusions can be made about normally distributed datasets.&lt;/p&gt;

&lt;p&gt;Below is the formula for z-values in normally distributed data:&lt;/p&gt;

&lt;p&gt;$$z=\frac{\text{value - mean}}{\text{standard deviation}}$$&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
We can use this very similar formula to find z-values for sample means of population data:&lt;/p&gt;

&lt;p&gt;$$z = \frac{\bar{X}-\mu}{\sigma\div\sqrt{n}} = \frac{\bar{X}-\mu}{\sigma_{\bar{X}}}$$&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;strong&gt;or&lt;/strong&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;$$z = \frac{\text{sample mean}-\text{population mean}}{\text{population standard deviation}\div\sqrt{\text{sample size}}} =  \frac{\text{sample mean}-\text{population mean}}{\text{sample standard deviation}}$$&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;sample_size_lessthan_30&#34;&gt;Z-Values With Sample Size Less Than 30&lt;/h2&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;If the number of sample is less than 30 then use the normal formula for a z-score.&lt;/p&gt;

&lt;p&gt;$$z = \frac{\bar{X}-\mu}{\sigma}$$&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;example_zscore_weather_data&#34;&gt;Example Weather Data&lt;/h2&gt;

&lt;p&gt;So if we took 36 days at random from the weather data, what is the probability that the mean of those 36 days would be greater than 60 degrees?&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;The standard deviation of the sample means would be:
$$\sigma_{\bar{X}} =\frac{\sigma}{\sqrt{n}} = \frac{21.12321}{\sqrt{36}} = 3.520535$$&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
OR
&lt;/center&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Station172765_TMax[, sd(MaxTemp, na.rm = TRUE)]/sqrt(36)
## [1] 3.520536
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;The z-score is:&lt;/p&gt;

&lt;p&gt;$$z = \frac{\bar{X}-\mu}{\sigma\div\sqrt{n}} = \frac{60-54.45328}{21.12321\div\sqrt{36}} = 1.575533$$&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(60-54.45328)/(21.12321/sqrt(36))

## [1] 1.575533
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;
And based on &lt;a href=&#34;https://en.wikipedia.org/wiki/Standard_normal_table&#34; target=&#34;_blank&#34;&gt;Z-Score lookup table&lt;/a&gt; the probability that 36 days would have a mean greater than 60 is 1-.94295 or &lt;strong&gt;0.05705&lt;/strong&gt;.
&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;pnorm_function&#34;&gt;Pnorm function&lt;/h3&gt;

&lt;p&gt;What&amp;rsquo;s key in this operation is that the value for the standard deviation entered into pnorm is &lt;strong&gt;not&lt;/strong&gt; 21.12321, but $21.12321 \div \sqrt{36}$.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pnorm(60, mean=54.45328, sd=(21.12321/sqrt(36)), lower.tail = FALSE)
## [1] 0.0575667
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So that means there&amp;rsquo;s a 5.76% percent chance that an average of 36 samples from this data set will be greater than 60 degrees. A short test in R with the weather station data set shows that this estimation holds up.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;meanSamples &amp;lt;- NULL

for (i in 1:1000000){
    meanSamples &amp;lt;-append(meanSamples, mean(sample(Station172765_TMax$MaxTemp, 36, replace = TRUE),na.rm = TRUE))
}

table(meanSamples &amp;gt; 60)

## FALSE  TRUE 
## 94318  5682 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;$$\frac{5682}{100000} = .05682$$&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;smaller_sample_size&#34;&gt;Smaller Sample Size&lt;/h3&gt;

&lt;p&gt;Where it gets interesting is if we have 5 days instead of 36. Five days falls below the level at which we have to divide sigma by the root of the sample size. So&amp;hellip;&lt;/p&gt;

&lt;p&gt;The z-score is:&lt;/p&gt;

&lt;p&gt;$$z = \frac{\bar{X}-\mu}{\sigma} = \frac{60-54.45328}{21.12321} = 0.2625889$$&lt;/p&gt;

&lt;p&gt;And based on &lt;a href=&#34;https://en.wikipedia.org/wiki/Standard_normal_table&#34; target=&#34;_blank&#34;&gt;Z-Score lookup table&lt;/a&gt; the probability that the mean of five values will be greater than 60 is 1-.60257 or &lt;strong&gt;0.39743&lt;/strong&gt;.
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Using pnorm we get a similar answer:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pnorm(60, 54.45328, 21.12321, lower.tail = FALSE)

## [1] 0.3964337
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;finite_population_correction_factor&#34;&gt;Finite Population Correction Factor&lt;/h1&gt;

&lt;p&gt;&lt;br&gt;
The Central Limit Theorem and standard error of the mean assume that samples are drawn with replacement. However almost all survey work are conducted on finite populations and samples are drawn without replacement. In these cases and especially when the sample size &lt;em&gt;n&lt;/em&gt; is large compared to the population size &lt;em&gt;N&lt;/em&gt; (more than 5%), the finite population correction (FPC) factor is used to account for the added precision gained by sampling close to a larger percentage of the population. The effect of the FPC is that the error becomes zero when the sample size n is equal to the population size N.&lt;/p&gt;

&lt;p&gt;Formula for the population correction factor:&lt;/p&gt;

&lt;p&gt;$$\sqrt{\frac{N-n}{N-1}}$$&lt;/p&gt;

&lt;p&gt;Where:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;N&lt;/em&gt; is the population size&lt;/li&gt;
&lt;li&gt;&lt;em&gt;n&lt;/em&gt; is the sample size&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;So the standard error of the mean is multiplied by the population correction factor:&lt;/p&gt;

&lt;p&gt;$$\sigma_{\bar{X}} = \frac{\sigma}{\sqrt{n}} \cdot \sqrt{\frac{N-n}{N-1}}$$&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;And the total formula for the z-value when using the population correction factor becomes:&lt;/p&gt;

&lt;p&gt;$$z = \frac{\bar{X}-\mu}{\frac{\sigma}{\sqrt{n}}\cdot\sqrt{\frac{N-n}{N-1}}}$$&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;population_size_and_pop_corr_factor&#34;&gt;Population Size and Population Correction Factor&lt;/h2&gt;

&lt;p&gt;This shows the effect that this correction factor has based on the size of the population N and the sample size n.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;small_n&#34;&gt;Small N&lt;/h3&gt;

&lt;p&gt;If &lt;strong&gt;N is small&lt;/strong&gt; and multiplied by a data set with a $\sigma$ of 1.&lt;/p&gt;

&lt;p&gt;$$\sqrt{\frac{150-30}{150-1}} = 0.8974236$$&lt;/p&gt;

&lt;p&gt;$$\sigma_{\bar{X}\text{Small}} = \frac{1}{\sqrt{30}} \cdot \sqrt{\frac{150-30}{150-1}} = 0.1638464$$&lt;/p&gt;

&lt;p&gt;$$z = \frac{4-3.5}{\frac{1}{\sqrt{30}}\cdot\sqrt{\frac{150-30}{150-1}}} = 3.051639$$&lt;/p&gt;

&lt;p&gt;So in this case 99.89% of the sample means fall below 4.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;large_n&#34;&gt;Large N&lt;/h3&gt;

&lt;p&gt;If &lt;strong&gt;N is large&lt;/strong&gt; and multiplied by a data set with a $\sigma$ of 1:&lt;/p&gt;

&lt;p&gt;$$\sqrt{\frac{100000-5}{100000-1}} = 0.999855$$&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;$$\sigma_{\bar{X}\text{Large}} = \frac{1}{\sqrt{30}} \cdot \sqrt{\frac{1000-5}{1000-1}} = 0.1825477$$&lt;/p&gt;

&lt;p&gt;$$z = \frac{4-3.5}{\frac{1}{\sqrt{30}}\cdot\sqrt{\frac{100000-30}{100000-1}}} = 2.73901$$&lt;/p&gt;

&lt;p&gt;In this case 99.69% of the sample means fall below 4.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;no_correction_factor&#34;&gt;No Correction Factor&lt;/h3&gt;

&lt;p&gt;This is fairly close to the standard error of the mean without a correction factor:&lt;/p&gt;

&lt;p&gt;$$\sigma_{\bar{X}\text{No Correction Factor}} = \frac{1}{\sqrt{30}} = 0.1825742$$&lt;/p&gt;

&lt;p&gt;$$z = \frac{\bar{X}-\mu}{\frac{\sigma}{\sqrt{n}}}$$&lt;/p&gt;

&lt;p&gt;$$z = \frac{4-3.5}{\frac{1}{\sqrt{30}}} \approx 2.738613$$&lt;/p&gt;

&lt;p&gt;And like the previous case 99.69% of the sample means fall below 4.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;example2&#34;&gt;EXAMPLE&lt;/h1&gt;

&lt;p&gt;A large freight elevator can transport a maximum of 9800 pounds. Suppose a load of cargo containing 49 boxes must be transported via the elevator. Experience has shown that the weight of boxes of this type of cargo follows a distribution with mean μ = 205 pounds and standard deviation σ = 15 pounds. Based on this information, what is the probability that all 49 boxes can be safely loaded onto the freight elevator and transported?&lt;/p&gt;

&lt;p&gt;$$z = \frac{\text{sample mean}-\text{population mean}}{\text{population standard deviation}\div\sqrt{\text{sample size}}}$$&lt;/p&gt;

&lt;p&gt;$$z = \frac{\bar{X}-\mu}{\sigma\div\sqrt{n}}$$&lt;/p&gt;

&lt;p&gt;$$z=\frac{(9800\div49)-205}{15\div\sqrt{49}} = -2.33$$&lt;/p&gt;

&lt;p&gt;$$.5-.4901 = 0.0099$$&lt;/p&gt;

&lt;p&gt;So there&amp;rsquo;s about a 1% chance that the freight elevator won&amp;rsquo;t fail.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
Using the pnorm function we get:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pnorm((9800/49), mean=205, sd=(15/sqrt(49)), lower.tail = TRUE)

## [1] 0.009815329
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;simulate&#34;&gt;Simulating the Central Limit Theorem&lt;/h1&gt;

&lt;p&gt;This is code from &lt;a href=&#34;https://qualityandinnovation.com/2015/03/30/sampling-distributions-and-central-limit-theorem-in-r/&#34; target=&#34;_blank&#34;&gt;Quality and Innovation&lt;/a&gt; which was reposted by &lt;a href=&#34;http://www.r-bloggers.com/sampling-distributions-and-central-limit-theorem-in-r/&#34; target=&#34;_blank&#34;&gt;R-Bloggers&lt;/a&gt; that simulates the central limit theorem. You can pick from several different distributions and then generate several plots that show the means of these distributions.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sdm.sim &amp;lt;- function(n,src.dist=NULL,param1=NULL,param2=NULL) {
   r &amp;lt;- 10000  # Number of replications/samples - DO NOT ADJUST
   # This produces a matrix of observations with  
   # n columns and r rows. Each row is one sample:
   my.samples &amp;lt;- switch(src.dist,
	&amp;quot;E&amp;quot; = matrix(rexp(n*r,param1),r),
	&amp;quot;N&amp;quot; = matrix(rnorm(n*r,param1,param2),r),
	&amp;quot;U&amp;quot; = matrix(runif(n*r,param1,param2),r),
	&amp;quot;P&amp;quot; = matrix(rpois(n*r,param1),r),
	&amp;quot;C&amp;quot; = matrix(rcauchy(n*r,param1,param2),r),
        &amp;quot;B&amp;quot; = matrix(rbinom(n*r,param1,param2),r),
	&amp;quot;G&amp;quot; = matrix(rgamma(n*r,param1,param2),r),
	&amp;quot;X&amp;quot; = matrix(rchisq(n*r,param1),r),
	&amp;quot;T&amp;quot; = matrix(rt(n*r,param1),r))
   all.sample.sums &amp;lt;- apply(my.samples,1,sum)
   all.sample.means &amp;lt;- apply(my.samples,1,mean)   
   all.sample.vars &amp;lt;- apply(my.samples,1,var) 
   par(mfrow=c(2,2))
   hist(my.samples[1,],col=&amp;quot;gray&amp;quot;,main=&amp;quot;Distribution of One Sample&amp;quot;)
   hist(all.sample.sums,col=&amp;quot;gray&amp;quot;,main=&amp;quot;Sampling Distribution of the Sum&amp;quot;)
   hist(all.sample.means,col=&amp;quot;gray&amp;quot;,main=&amp;quot;Sampling Distribution of the Mean&amp;quot;)
   hist(all.sample.vars,col=&amp;quot;gray&amp;quot;,main=&amp;quot;Sampling Distribution of the Variance&amp;quot;)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;There are 9 population distributions to choose from: exponential (E), normal (N), uniform (U), Poisson (P), Cauchy &amp;copy;, binomial (B), gamma (G), Chi-Square (X), and the Student’s t distribution (t). Note also that you have to provide either one or two parameters, depending upon what distribution you are selecting. For example, a normal distribution requires that you specify the mean and standard deviation to describe where it’s centered, and how fat or thin it is (that’s two parameters). A Chi-square distribution requires that you specify the degrees of freedom (that’s only one parameter). You can find out exactly what distributions require what parameters by going here: &lt;a href=&#34;http://en.wikibooks.org/wiki/R_Programming/Probability_Distributions&#34; target=&#34;_blank&#34;&gt;http://en.wikibooks.org/wiki/R_Programming/Probability_Distributions&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For example an exponential distribution looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hist(rexp(100000,1))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/portfolio/Central_Limit_Theorem_files/Central_Limit_Theorem_Rbloggers_1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;But these plots show what the sample means for an exponential distribution look like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sdm.sim(10,src.dist=&amp;quot;E&amp;quot;,1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/portfolio/Central_Limit_Theorem_files/Central_Limit_Theorem_Rbloggers_2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;additional_sources&#34;&gt;Additional Sources&lt;/h1&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.r-bloggers.com/sampling-distributions-and-central-limit-theorem-in-r/&#34; target=&#34;_blank&#34;&gt;Sampling Distributions and Central Limit Theorem in R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://atcm.mathandtech.org/EP2009/papers_full/2812009_17251.pdf&#34; target=&#34;_blank&#34;&gt;The Use of R Language in the Teaching of Central Limit Theorem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.math.utah.edu/~treiberg/M3074Simulation.pdf&#34; target=&#34;_blank&#34;&gt;Simulation: Central Limit Theorem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.stat.ucla.edu/~nchristo/introeconometrics/introecon_central_limit_theorem.pdf&#34; target=&#34;_blank&#34;&gt;UCLA: The Central Limit Theorem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cios.org/readbook/rmcs/ch10.pdf&#34; target=&#34;_blank&#34;&gt;Sampling Distributions and the Central Limit Theorem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3148365/&#34; target=&#34;_blank&#34;&gt;In Brief: Standard Deviation and Standard Error&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Example Talk</title>
      <link>/talk/example-talk/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 -0500</pubDate>
      
      <guid>/talk/example-talk/</guid>
      <description>&lt;p&gt;Embed your slides or video here using &lt;a href=&#34;https://sourcethemes.com/academic/post/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;shortcodes&lt;/a&gt;. Further details can easily be added using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Deep Learning</title>
      <link>/project/deep-learning/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 -0400</pubDate>
      
      <guid>/project/deep-learning/</guid>
      <description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;

&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;

&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;

&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;

&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>External Project</title>
      <link>/project/example-external-project/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 -0400</pubDate>
      
      <guid>/project/example-external-project/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Graduate School Thesis</title>
      <link>/portfolio/thesis/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 -0400</pubDate>
      
      <guid>/portfolio/thesis/</guid>
      <description></description>
    </item>
    
    <item>
      <title>How To Use Data Tables in R</title>
      <link>/portfolio/data_tables/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 -0400</pubDate>
      
      <guid>/portfolio/data_tables/</guid>
      <description>

&lt;hr /&gt;

&lt;h1 id=&#34;purpose&#34;&gt;Purpose&lt;/h1&gt;

&lt;p&gt;Data tables can handle large data sets faster than data frames, however the [i,j,by] syntax can be a bit confusing. This will explain how to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;use the &lt;a href=&#34;https://github.com/Rdatatable/data.table/wiki&#34; target=&#34;_blank&#34;&gt;data.tables&lt;/a&gt; package in R.&lt;/li&gt;
&lt;li&gt;select data by row and column&lt;/li&gt;
&lt;li&gt;perform functions on subsetted data&lt;/li&gt;
&lt;li&gt;
&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#create&#34;&gt;Create a Data Table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#list_data_tables&#34;&gt;List Data Tables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#i_j_by&#34;&gt;[i, j, by]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dti&#34;&gt;Select rows: DT[i]&lt;/a&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#print_rows_searching_value_in_column&#34;&gt;Print rows by searching for a value in a column&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dtj&#34;&gt;Select Columns: DT[,j]&lt;/a&gt;&lt;br /&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#perform_functions_on_column&#34;&gt;Performing functions on a column&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dtij&#34;&gt;Selecting Rows and Columns &lt;code&gt;DT[i,j]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dt_ijby&#34;&gt;Perform a function on a column by the value of another column &lt;code&gt;DT[i,j,by]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Perform A Function On A Column By Values In Another Column From A Subset of Rows DT[i,j,by]&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#objects_N&#34;&gt;Return The Number of Objects .N&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#modifying_data_tables&#34;&gt;Modifying Data.Tables DT[i,j := ]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Complete Cases - removing NA rows&lt;/li&gt;
&lt;li&gt;Using setkey() to sort by a keyed column

&lt;ul&gt;
&lt;li&gt;key()&lt;/li&gt;
&lt;li&gt;Returning specified columns - mult()&lt;/li&gt;
&lt;li&gt;Nomatch&lt;/li&gt;
&lt;li&gt;Math Operations using setkey&lt;/li&gt;
&lt;li&gt;by=.EACHI&lt;/li&gt;
&lt;li&gt;Using setkey() on Multiple Columns&lt;/li&gt;
&lt;li&gt;N&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;List&lt;/li&gt;
&lt;li&gt;SD (Subset of Data)

&lt;ul&gt;
&lt;li&gt;lapply&lt;/li&gt;
&lt;li&gt;SDcols&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Chaining multiple operations together&lt;/li&gt;
&lt;li&gt;Set and looping in a data.table&lt;/li&gt;
&lt;li&gt;Change column names using setnames()&lt;/li&gt;
&lt;li&gt;Changing column order - setcolorder()&lt;/li&gt;
&lt;li&gt;Unique&lt;/li&gt;
&lt;li&gt;Additional Information (#additional_information)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;create&#34;&gt;Create a data.table&lt;/h1&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Start by creating a few data tables. This tutorial will use two data tables, one called &lt;strong&gt;DT&lt;/strong&gt; with dummy data, and another called &lt;strong&gt;MTCarsDT&lt;/strong&gt; which contains the &lt;code&gt;mtcars&lt;/code&gt; dataset from the datasets package.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;library(data.table)


set.seed(45L)

DT &amp;lt;- data.table(
    V1=rep(c(1,2),6),
    V2=rep(LETTERS[1:3],4),
    V3=rep(round(rnorm(4),4),3),
    V4=1:12,
    V5=21:32,
    V6=LETTERS[1:12],
    V7=101:112,
    V8=121:132,
    V9=rep(c(NA,1,2,3), 3)
    )
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;DT

##     V1 V2      V3 V4 V5 V6  V7  V8 V9
##  1:  1  A  0.3408  1 21  A 101 121 NA
##  2:  2  B -0.7033  2 22  B 102 122  1
##  3:  1  C -0.3795  3 23  C 103 123  2
##  4:  2  A -0.7460  4 24  D 104 124  3
##  5:  1  B  0.3408  5 25  E 105 125 NA
##  6:  2  C -0.7033  6 26  F 106 126  1
##  7:  1  A -0.3795  7 27  G 107 127  2
##  8:  2  B -0.7460  8 28  H 108 128  3
##  9:  1  C  0.3408  9 29  I 109 129 NA
## 10:  2  A -0.7033 10 30  J 110 130  1
## 11:  1  B -0.3795 11 31  K 111 131  2
## 12:  2  C -0.7460 12 32  L 112 132  3
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsDT &amp;lt;- data.table(mtcars)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;head(MTCarsDT)

##     mpg cyl disp  hp drat    wt  qsec vs am gear carb
## 1: 21.0   6  160 110 3.90 2.620 16.46  0  1    4    4
## 2: 21.0   6  160 110 3.90 2.875 17.02  0  1    4    4
## 3: 22.8   4  108  93 3.85 2.320 18.61  1  1    4    1
## 4: 21.4   6  258 110 3.08 3.215 19.44  1  0    3    1
## 5: 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2
## 6: 18.1   6  225 105 2.76 3.460 20.22  1  0    3    1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;list_data_tables&#34;&gt;Listing Data Tables&lt;/h1&gt;

&lt;p&gt;The data.table package has a nice function that will list all tables in the global environment as well as their columns, and some extra information.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tables()

##      NAME     NROW NCOL MB COLS                                        
## [1,] DT         12    9  1 V1,V2,V3,V4,V5,V6,V7,V8,V9                  
## [2,] MTCarsDT   32   11  1 mpg,cyl,disp,hp,drat,wt,qsec,vs,am,gear,carb
##      KEY
## [1,]    
## [2,]    
## Total: 2MB
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;i_j_by&#34;&gt;[i, j, by]&lt;/h1&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Data Tables allow you to find data in them and perform operations using the following syntax: &lt;code&gt;DT[i, j, by]&lt;/code&gt;, which means, “Take DT, subset rows using &lt;code&gt;i&lt;/code&gt;, then calculate &lt;code&gt;j&lt;/code&gt; grouped by &lt;code&gt;by&lt;/code&gt;.” This is similar to SQL syntax where i corresponds to SELECT,&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;dti&#34;&gt;Select rows: &lt;code&gt;DT[i]&lt;/code&gt;&lt;/h1&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;To start with we&amp;rsquo;ll select rows.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MTCarsDT[3]

##     mpg cyl disp hp drat   wt  qsec vs am gear carb
## 1: 22.8   4  108 93 3.85 2.32 18.61  1  1    4    1

MTCarsDT[3:5]

##     mpg cyl disp  hp drat    wt  qsec vs am gear carb
## 1: 22.8   4  108  93 3.85 2.320 18.61  1  1    4    1
## 2: 21.4   6  258 110 3.08 3.215 19.44  1  0    3    1
## 3: 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2

MTCarsDT[c(3,5:8)]

##     mpg cyl  disp  hp drat   wt  qsec vs am gear carb
## 1: 22.8   4 108.0  93 3.85 2.32 18.61  1  1    4    1
## 2: 18.7   8 360.0 175 3.15 3.44 17.02  0  0    3    2
## 3: 18.1   6 225.0 105 2.76 3.46 20.22  1  0    3    1
## 4: 14.3   8 360.0 245 3.21 3.57 15.84  0  0    3    4
## 5: 24.4   4 146.7  62 3.69 3.19 20.00  1  0    4    2

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;
Notice that the previous command uses the combine function, c(), to list the different rows that will be printed. Without the combine function R will print the 3rd row for columns 5 through 8, like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MTCarsDT[3,5:8]

##    drat   wt  qsec vs
## 1: 3.85 2.32 18.61  1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;print_rows_searching_value_in_column&#34;&gt;Print rows by searching for a value in a column&lt;/h2&gt;

&lt;p&gt;Print rows with 6 cylinder cars&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MTCarsDT[cyl == 6]

##     mpg cyl  disp  hp drat    wt  qsec vs am gear carb
## 1: 21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4
## 2: 21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4
## 3: 21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1
## 4: 18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1
## 5: 19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4
## 6: 17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4
## 7: 19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Print rows with 4 and 6 cylinder cars.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsDT[cyl %in% c(4,6)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Print rows with cars that have 110 or 123 hp.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsDT[hp %in% c(110,123)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;dtj&#34;&gt;Select Columns: &lt;code&gt;DT[,j]&lt;/code&gt;&lt;/h1&gt;

&lt;p&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Print the hp column as a vector&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsDT[,hp]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Print just the hp column as a data.table&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;head(MTCarsDT[,.(hp)])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that the expression &lt;code&gt;.(hp)&lt;/code&gt; is identical to &lt;code&gt;list(hp)&lt;/code&gt;, the period is equivalent to the list function.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;head(MTCarsDT[,list(hp)])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Print multiple columns as a data.table.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MTCarsDT[,.(hp, cyl)]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;MTCarsDT[,.(hp, cyl)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;You can also print columns by index using the index number and &lt;code&gt;with=FALSE&lt;/code&gt;, but this is a bad idea. See below.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;head(MTCarsDT[, 1:3, with=FALSE])
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;head(MTCarsDT[, c(1:3,4,6), with=FALSE])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Using &lt;code&gt;with=FALSE&lt;/code&gt; to refer to columns by index number can create errors. If you reference a column by number and then add, move, or replace columns, the code may continue to execute and may appear normal but it will return incorrect results without any warning. For this reason you should refer to columns by name rather than number.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;perform_functions_on_column&#34;&gt;Performing functions on a column&lt;/h2&gt;

&lt;p&gt;You can perform functions on a column.&lt;/p&gt;

&lt;p&gt;This will return the mean of the hp column:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MTCarsDT[,mean(hp)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Return the mean of &lt;code&gt;hp&lt;/code&gt; and standard deviation of &lt;code&gt;mpg&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MTCarsDT[,.(mean(hp), sd(mpg))]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The same as above but the results have different names.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsDT[,.(horsepower=mean(hp), milespergallon=sd(mpg))]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This prints the horsepower for each row and repeats the values of the sd and mean of the hp column.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MTCarsDT[,.(hp, SD_HP=sd(hp), Mean_HP=mean(hp))]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;MTCarsDT[,.(hp, SD_HP=sd(hp), Mean_HP=mean(hp))]
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br&gt;
We can use apply on a data.table to apply a function to each column&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sapply(MTCarsDT, class)
sapply(DT, mean) #returns errors if column is not numeric
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;
The curly braces allow multiple functions. Notice that the separate functions must be placed on separate lines or be separated by semicolons.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MTCarsDT[, {print(disp); plot(mpg, wt); sapply(MTCarsDT, mean)}]
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;dtij&#34;&gt;Selecting Rows and Columns &lt;code&gt;DT[i,j]&lt;/code&gt;&lt;/h1&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Print rows 1:5 but only the hp, weight, and mpg columns.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsDT[1:5, .(hp,wt,mpg)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Return cylinders, hp, mean hp and mpg for 6 cylinder cars.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsDT[cyl == 6,.(cyl,hp,MeanHorsepower = mean(hp),mpg)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that the mean horsepower is &lt;em&gt;only&lt;/em&gt; for 6 cylinder cars and doesn&amp;rsquo;t include 4 and 8 cylinder cars.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r,&#34;&gt;MTCarsDT[,mean(hp)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;dtjby&#34;&gt;Perform a function on a column by the value of another column &lt;code&gt;DT[,j,by]&lt;/code&gt;&lt;/h1&gt;

&lt;p&gt;&lt;br&gt;
This gives the mean horsepower by the number of cylinders.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsDT[,.(MeanHP = mean(hp)), by=cyl]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will give mean time in seconds for &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;4&lt;/sub&gt; mile race based on both gears and cylinders.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsDT[,.(MeanQuarterMile = mean(qsec)), by=.(cyl,gear)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;dt_ijby&#34;&gt;Perform A Function On A Column By Values In Another Column From A Subset of Rows &lt;code&gt;DT[i,j,by]&lt;/code&gt;&lt;/h1&gt;

&lt;p&gt;This gives the mean horsepower of the first ten cars by the number of cylinders.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MTCarsDT[1:10,.(mean_hp = mean(hp)), by=cyl]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;This will give the mean hp for cars with 4 gears grouped by the number cylinders.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsDT[gear == 4,.(Mean_HP = mean(hp)), by=cyl]
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;objects_N&#34;&gt;Count The Number of Objects &lt;code&gt;.N&lt;/code&gt;&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;.N&lt;/code&gt; is a variable that will return the number of instances.&lt;/p&gt;

&lt;p&gt;This gives a total count of the number of rows in the dataset:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MTCarsDT[,.N]

## [1] 32
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This returns a count of the number of cars grouped by the number of gears they might have.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MTCarsDT[,.N, by=gear]

##     gear  N
##  1:    4 12
##  2:    3 15
##  3:    5  5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This returns the count of gears only for 6 cylinder cars:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MTCarsDT[cyl == 6, .N, by=gear]

##     gear N
##  1:    4 4
##  2:    3 2
##  3:    5 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This also works.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MTCarsDT[,table(gear)]

##  gear
##   3  4  5 
##  15 12  5 
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;modifying_data_tables&#34;&gt;Modifying Data.Tables &lt;code&gt;DT[i,j := ]&lt;/code&gt;&lt;/h1&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;:=&lt;/code&gt; operator updates columns and does so invisibly. The := operator makes the assignment operator (&lt;code&gt;DT &amp;lt;- DT[.....]&lt;/code&gt;) unnecessary because it is significantly faster than the assignment operator. &lt;a href=&#34;https://www.rdocumentation.org/packages/data.table/versions/1.11.4/topics/%3A%3D&#34; target=&#34;_blank&#34;&gt;For more on :=&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;DT[,V8]

DT[, V8 := round(exp(V3),2)]

DT[,V8]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Replace NA&amp;rsquo;s in V9 column with 0&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;DT[,V9]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;DT[is.na(V9), V9 := 0]
DT[1:5]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Columns V6 and V7 are updated with the results of the functions after the := operator.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;DT[,.(V6,V7)]
DT[, c(&amp;quot;V6&amp;quot;,&amp;quot;V7&amp;quot;) := .(LETTERS [3:5], round(exp(V1),2))]
DT[,.(V6,V7)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Adding brackets (&lt;code&gt;[]&lt;/code&gt;) to the end of the operation will print the result automatically.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;DT[, c(&amp;quot;V6&amp;quot;, &amp;quot;V7&amp;quot;) := .(LETTERS [3:5], round(exp(V1),2))][]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This deletes the V1 column&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;DT[, V1 := NULL][]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And this deletes V7 and V8&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;DT[, c(&amp;quot;V7&amp;quot;,&amp;quot;V8&amp;quot;) := NULL][]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Find the values in column V2 = A and assign X to them.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;DT[V2 == &amp;quot;A&amp;quot;, V2 := &amp;quot;X&amp;quot;][]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add columns V7 and V8 back.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;DT[,c(&amp;quot;V7&amp;quot;,&amp;quot;V8&amp;quot;) := .(101:112,121:132)][]
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;complete-cases-removing-na-rows&#34;&gt;Complete Cases - removing NA rows&lt;/h1&gt;

&lt;p&gt;We can use &lt;code&gt;complete cases&lt;/code&gt; to delete all rows with NA values from any column. Complete cases is not part of the data.table package, but it is handy.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
First I&amp;rsquo;ll change the V8 column to include some NA&amp;rsquo;s, then delete all those rows with NA&amp;rsquo;s.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;DT[,&amp;quot;V8&amp;quot; := rep(c(NA,1,2,3), 3)][]
DT &amp;lt;- DT[complete.cases(DT)]
head(DT)
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;using-setkey-to-sort-by-a-keyed-column&#34;&gt;Using &lt;code&gt;setkey()&lt;/code&gt; to sort by a keyed column&lt;/h1&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Setkey does two things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;It reorders the rows of the data.table by the keyed column in increasing order.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;It marks the keyed column in the data.table.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;It allows us to easily search through that column.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;First, this operation keys the V2 column in this Data Table.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r,&#34;&gt;setkey(DT,V2)
DT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;We can search through a keyed column quite easily.&lt;/p&gt;

&lt;p&gt;If only one column has been keyed we can search the keyed column and display all rows that match the search.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;setkey(DT,V2)
DT[&amp;quot;B&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can also search for two values in the keyed column.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;DT[c(&amp;quot;B&amp;quot;, &amp;quot;X&amp;quot;)]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;key&#34;&gt;key()&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;key()&lt;/code&gt; will tell us which column, if any, are set as the keyed column.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;key(DT)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;haskey()&lt;/code&gt; will return TRUE or FALSE if a data.table has a key assigned.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;haskey(MTCarsDT)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And our old friend &lt;code&gt;tables()&lt;/code&gt; will also tell us any keyed columns in any data.table in the global environment.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tables()
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;returning-specified-columns-mult&#34;&gt;Returning specified columns - mult()&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;mult&lt;/code&gt; command returns the row specified. The options are &lt;em&gt;first&lt;/em&gt;, &lt;em&gt;last&lt;/em&gt; and &lt;em&gt;all&lt;/em&gt;. All is the default.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r,&#34;&gt;DT[&amp;quot;X&amp;quot;, mult=&amp;quot;first&amp;quot;]
DT[&amp;quot;X&amp;quot;, mult=&amp;quot;last&amp;quot;]
DT[&amp;quot;X&amp;quot;, mult=&amp;quot;all&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;nomatch&#34;&gt;Nomatch&lt;/h2&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;If you search for a value that doesn&amp;rsquo;t exist the data table will return with an NA row.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;DT[c(&amp;quot;X&amp;quot;, &amp;quot;D&amp;quot;)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;However you can add the &lt;strong&gt;nomatch&lt;/strong&gt; command and it won&amp;rsquo;t include the NA row.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;DT[c(&amp;quot;X&amp;quot;, &amp;quot;D&amp;quot;), nomatch=0]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;math-operations-using-setkey&#34;&gt;Math Operations using setkey&lt;/h2&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Now we can perform specific operations on these rows that have been keyed. Like getting the mean hp for 6 cylinder cars.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;setkey(MTCarsDT, cyl)
MTCarsDT[.(6), mean(hp)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;And we can return mean hp for both 4 and 6 cylinder cars&amp;hellip;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsDT[.(c(4, 6)), mean(hp)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;by-eachi&#34;&gt;by=.EACHI&lt;/h2&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;But what if we want the mean hp for 6 cylinder cars and the mean hp for 4 cylinder cars returned separately. Use the &lt;code&gt;by.=EACHI&lt;/code&gt; command which will perform same operation separately for each entered value in the keyed column. For keyed columns that are characater data we can just enter a command like this example from DT:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;setkey(DT, V2)
DT[c(&amp;quot;X&amp;quot;, &amp;quot;B&amp;quot;), mean(V5), by=.EACHI]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This however returns an error:&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
&lt;code&gt;
MTCarsDT[c(4, 6), mean(hp), by=.EACHI]
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
The problem is that when subsetting a keyed column that has integer data, the data.table syntax assumes that &lt;code&gt;MTCarsDT[c(4, 6), mean(hp), by=.EACHI]&lt;/code&gt; is referring to the 4th and 6th rows, not to all 4 cylinder and 6 cylinder cars.&lt;/p&gt;

&lt;p&gt;For example this operation gives the mean of rows 4 and 6.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsDT[c(4, 6), mean(hp)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;The solution is to put the &lt;code&gt;c(4,6)&lt;/code&gt; into a list (see &lt;a href=&#34;#list&#34;&gt;List&lt;/a&gt; below) which works like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsDT[.(c(4, 6)), mean(hp), by=.EACHI]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;So while this works with character data:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;DT[c(&amp;quot;X&amp;quot;, &amp;quot;B&amp;quot;), mean(V5), by=.EACHI]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A list must be used for integer data:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;MTCarsDT[.(c(4, 6)), mean(hp), by=.EACHI]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;
Notice also that I used this same syntax above in &lt;a href=&#34;#math-operations-using-setkey&#34;&gt;Math Operations using setkey&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;using-setkey-on-multiple-columns&#34;&gt;Using setkey() on Multiple Columns&lt;/h2&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;We can key multiple columns, for example the cylinder and gear columns.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;setkey(MTCarsDT, cyl, gear)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;
And then print the rows with 4 cylinders and 5 gears&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsDT[.(4,5)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;
Or 4 cylinders and 4 or 5 gears&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsDT[.(4,c(4,5))]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;
And then return the mean hp for 4 cylinder 4 gear cars and for 4 cylinder 5 gear cars.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsDT[.(4, c(4,5)), mean(hp), by=.EACHI]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;n&#34;&gt;N&lt;/h1&gt;

&lt;p&gt;&lt;br&gt;
&lt;code&gt;.N&lt;/code&gt; displays the last row.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsDT[.N]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;
&lt;code&gt;.N-1&lt;/code&gt; displays the penultimate row and so on.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r,&#34;&gt;MTCarsDT[.N-1]
MTCarsDT[.N-4]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;
but &lt;code&gt;,.N&lt;/code&gt; displays the number of rows&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsDT[,.N]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This can be handy if you want to display the largest value of a keyed row. For example, this will give the heaviest vehicle followed by the heaviest vehicles sorted by the number of cylinders.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;setkey(MTCarsDT, wt)
MTCarsDT[, wt[.N]]
MTCarsDT[, wt[.N], by=cyl]
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;list&#34;&gt;List&lt;/h1&gt;

&lt;p&gt;The &lt;code&gt;.()&lt;/code&gt; command is the same as &lt;code&gt;list()&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;col2&#34;&gt;
```{r}
head(MTCarsDT[,.(cyl, disp)])
head(MTCarsDT[,list(cyl, disp)])
```
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;We can use this list function to get the mean hp for each combination of gears and cylinders&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsDT[,mean(hp),.(cyl,gear)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;sd-ie-s-ubset-of-d-ata&#34;&gt;SD - ie &lt;strong&gt;S&lt;/strong&gt;ubset of &lt;strong&gt;D&lt;/strong&gt;ata&lt;/h1&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;So first we can set the key to the cylinders column in MTCarsDT.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;setkey(MTCarsDT, cyl)
MTCarsDT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using .SD it will print all of the data above but group the data by the number of cylinders. This works even if there is no key. Notice that the cylinders column is missing.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsDT[,print(.SD), by = cyl]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;
And you can select all the data by cylinder.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsDT[.(6),print(.SD), by=&amp;quot;cyl&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;This prints the first and last row grouped by the number of cylinders in the data set.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsDT[,.SD[c(1,.N)], by=cyl]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;lapply&#34;&gt;lapply&lt;/h2&gt;

&lt;p&gt;Using lapply() we can perform a function on every column grouped by the number of cylinders.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsDT[, lapply(.SD, mean), by=cyl]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;sdcols&#34;&gt;SDcols&lt;/h2&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;We can select specifically the columns we want to calculate and display using &lt;code&gt;.SDcols&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsDT[, lapply(.SD,mean), by=cyl, .SDcols = c(&amp;quot;wt&amp;quot;,&amp;quot;hp&amp;quot;, &amp;quot;disp&amp;quot;)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Or we can use &lt;code&gt;.SDcols&lt;/code&gt; to specify the column numbers that we want to display, although reference columns by number is frowned upon.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsDT[, lapply(.SD,mean), by=cyl, .SDcols = 3:7]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;And we can specify a several columns in a sequence by using &lt;code&gt;pasteO&lt;/code&gt; as long as the columns are numbered sequentially.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;DT[,lapply(.SD,sum), by=V2, .SDcols = paste0(&amp;quot;V&amp;quot;,3:5)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;chaining-multiple-operations-together&#34;&gt;Chaining multiple operations together&lt;/h1&gt;

&lt;p&gt;Chaining allows you to perform multiple functions in one statement.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;This set of operations will print the mean horsepower for cars, grouped by cylinder, that have more than 100 hp. But this creates a new data.table and is unnecessary.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r,&#34;&gt;MTCarsDT2 &amp;lt;- MTCarsDT[, .(mean.hp = mean(hp)), by=cyl]
MTCarsDT2
MTCarsDT2[mean.hp &amp;gt; 100]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;This is the easier way.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;
MTCarsDT[, .(mean.hp = mean(hp)), by=cyl][mean.hp &amp;gt; 100]

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;set-and-looping-in-a-data-table&#34;&gt;Set and looping in a data.table&lt;/h1&gt;

&lt;p&gt;Set can be used to assign values in a data.table. Normally the := operation is better but &lt;strong&gt;set&lt;/strong&gt; yields faster results in a &lt;strong&gt;for loop&lt;/strong&gt; than any other function, so if you must loop, use set().&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.inside-r.org/packages/cran/data.table/docs/set&#34; target=&#34;_blank&#34;&gt;From inside-R&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Since [.data.table incurs overhead to check the existence and type of arguments (for example), set() provides direct (but less flexible) assignment by reference with low overhead, appropriate for use inside a for loop. See examples. := is more flexible than set() because := is intended to be combined with i and by in single queries on large datasets.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Remember our friend DT?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r,&#34;&gt;DT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;This is the syntax for set : &lt;code&gt;for (i in from:to) set(DT, row, column, new value)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And this will renumber the V9 column:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r,&#34;&gt;for (i in 1:9) set(DT,i,&amp;quot;V9&amp;quot;,i)
head(DT)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;An example of the speed of using set.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r,&#34;&gt;m = matrix(1,nrow=100000,ncol=100)
DF = as.data.frame(m)
DT = as.data.table(m)
dim(DT)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we can run a speed test on the different methods of assigning the value of i to the i&amp;rsquo;th row of the first column.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r,&#34;&gt;system.time(for (i in 1:100000) DF[i,1] &amp;lt;- i)

system.time(for (i in 1:100000) DT[i,V1:=i])

system.time(for (i in 1:100000) set(DT,i,1L,i))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So you can see there are big speed advantages to using set() over the assignment operator &amp;lt;- or the assignment by reference operator := .
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Also notice the the use of &lt;code&gt;1L&lt;/code&gt; to select the first column in the set command of the final speed test. See &lt;a href=&#34;http://stackoverflow.com/questions/7014387/whats-the-difference-between-1l-and-1&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://cran.r-project.org/doc/manuals/R-lang.html#Constants&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; for a discussion of the use of 1 vs 1L for integers in R.&lt;/p&gt;

&lt;h1 id=&#34;change-column-names-using-setnames&#34;&gt;Change column names using setnames()&lt;/h1&gt;

&lt;p&gt;&lt;br&gt;
The syntax is setnames(DT, &amp;ldquo;oldname&amp;rdquo;, &amp;ldquo;newname&amp;rdquo;)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r,&#34;&gt;colnames(MTCarsDT)
setnames(MTCarsDT, &amp;quot;hp&amp;quot;, &amp;quot;horsepower&amp;quot;)
colnames(MTCarsDT)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can also change multiple columnames at the same time.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;setnames(MTCarsDT, c(&amp;quot;cyl&amp;quot;, &amp;quot;disp&amp;quot;), c(&amp;quot;cylinders&amp;quot;, &amp;quot;displacement&amp;quot;))
colnames(MTCarsDT)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;changing-column-order-setcolorder&#34;&gt;Changing column order - setcolorder()&lt;/h1&gt;

&lt;p&gt;We can create a new column order by&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MTCarsColumns &amp;lt;- c(&amp;quot;drat&amp;quot;,&amp;quot;wt&amp;quot;,&amp;quot;qsec&amp;quot;,&amp;quot;vs&amp;quot;,&amp;quot;am&amp;quot;,&amp;quot;gear&amp;quot;,&amp;quot;carb&amp;quot;,&amp;quot;mpg&amp;quot;,&amp;quot;cylinders&amp;quot;,&amp;quot;displacement&amp;quot;,&amp;quot;horsepower&amp;quot;)

setcolorder(MTCarsDT, MTCarsColumns)
MTCarsDT[1]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;or by giving it a string of names&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;setcolorder(MTCarsDT, c(&amp;quot;mpg&amp;quot;,&amp;quot;cylinders&amp;quot;,&amp;quot;displacement&amp;quot;,&amp;quot;horsepower&amp;quot;,&amp;quot;drat&amp;quot;,&amp;quot;wt&amp;quot;,&amp;quot;qsec&amp;quot;,&amp;quot;vs&amp;quot;,&amp;quot;am&amp;quot;,&amp;quot;gear&amp;quot;,&amp;quot;carb&amp;quot;))
MTCarsDT[1]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;unique&#34;&gt;Unique&lt;/h1&gt;

&lt;p&gt;Unique returns a data.table where duplicate data, by keyed row, are removed. So here&amp;rsquo;s a new data.table, notice that rows 3 and 12 are identical to rows 1 and 10 respectively.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;DT &amp;lt;- data.table(A = rep(1:3, each=4), B = rep(1:4, each=3),
                 C = rep(1:2, 6), key = &amp;quot;B&amp;quot;)
DT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using &lt;code&gt;duplicated&lt;/code&gt; we can see that there are two rows &lt;code&gt;TRUE&lt;/code&gt; that are identical to other rows that have already been displayed.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;duplicated(DT)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Unique&lt;/code&gt; will return a DT without the duplicates.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;unique(DT)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;uniqueN returns the number of unique rows.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;uniqueN(DT)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;additional_information&#34;&gt;Additional Information&lt;/h1&gt;

&lt;p&gt;More info and references:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Rdatatable/data.table/wiki&#34; target=&#34;_blank&#34;&gt;Data Tables Github Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/7014387/whats-the-difference-between-1l-and-1&#34; target=&#34;_blank&#34;&gt;What&amp;rsquo;s the difference between &lt;code&gt;1L&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/doc/manuals/R-lang.html#Constants&#34; target=&#34;_blank&#34;&gt;R Language Definition: Constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.r-bloggers.com/a-data-table-r-tutorial-by-datacamp-intro-to-dti-j-by/&#34; target=&#34;_blank&#34;&gt;A data.table R tutorial by DataCamp: intro to DT[i, j, by]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Managing Python on Mac OS</title>
      <link>/portfolio/uninstalling-python/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 -0400</pubDate>
      
      <guid>/portfolio/uninstalling-python/</guid>
      <description>

&lt;h1 id=&#34;summary&#34;&gt;Summary&lt;/h1&gt;

&lt;p&gt;It&amp;rsquo;s easy to install multiple versions of python on a Mac computer using installers from &lt;a href=&#34;http://www.python.org&#34; target=&#34;_blank&#34;&gt;python.org&lt;/a&gt;, &lt;a href=&#34;http://brew.sh&#34; target=&#34;_blank&#34;&gt;Homebrew&lt;/a&gt;, &lt;a href=&#34;https://www.anaconda.com&#34; target=&#34;_blank&#34;&gt;Conda&lt;/a&gt;, or other sources. This could create conflicts if a user wants to run one version of python but bash calls a different version instead.&lt;/p&gt;

&lt;p&gt;This is guide will show you how to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;modify your bash profile to change which version of python is called by bash first.&lt;/li&gt;
&lt;li&gt;use virtual environments to specify a version of python that will run a project.&lt;/li&gt;
&lt;li&gt;uninstall specific versions of python.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;warnings&#34;&gt;Warnings&lt;/h1&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;mac-os-needs-python&#34;&gt;Mac OS needs python&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;DO NOT&lt;/strong&gt; remove any versions of Python found in the following folders:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/usr/bin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system/Library&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These versions of Python&amp;mdash;which should be Python 2.7&amp;mdash;are installed by Apple and used by Mac OS and other software to perform some functions. Deleting Python from these directories will break Mac OS and force you to reinstall it on your computer.&lt;/p&gt;

&lt;h3 id=&#34;other-projects-may-need-specific-versions-of-python&#34;&gt;Other projects may need specific versions of python&lt;/h3&gt;

&lt;p&gt;You may have a python project or you may use python packages that require particular versions of Python. Uninstalling those versions would prevent those projects or packages from working until that version of python is reinstalled. For example, Python 3 is a dependency of Numpy; if you uninstalled Python 3, then Numpy wouldn&amp;rsquo;t work until you reinstalled Python 3.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;installation&#34;&gt;Installation&lt;/h1&gt;

&lt;p&gt;Three common methods of installing python can be found here:&lt;/p&gt;

&lt;h3 id=&#34;python-org-python-org&#34;&gt;&lt;a href=&#34;python.org&#34; target=&#34;_blank&#34;&gt;python.org&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;The python.org installer can be found &lt;a href=&#34;https://www.python.org/downloads/&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;homebrew-https-brew-sh&#34;&gt;&lt;a href=&#34;https://brew.sh&#34; target=&#34;_blank&#34;&gt;Homebrew&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;First install Homebrew. The instructions are &lt;a href=&#34;https://brew.sh&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;, or enter the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/usr/bin/ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;To install Python 3:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install python
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To install Python 2:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install python@2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;anaconda-https-www-anaconda-com&#34;&gt;&lt;a href=&#34;https://www.anaconda.com&#34; target=&#34;_blank&#34;&gt;Anaconda&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Anaconda is generally used for scientific and machine learning applications.&lt;/p&gt;

&lt;p&gt;For &lt;strong&gt;Ananconda&lt;/strong&gt; follow installation instructions &lt;a href=&#34;https://www.anaconda.com/download/#macos&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Miniconda is a stripped down version of Anaconda.&lt;/p&gt;

&lt;p&gt;For &lt;strong&gt;Miniconda&lt;/strong&gt; follow installation instructions &lt;a href=&#34;https://conda.io/docs/user-guide/install/index.html&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;path-and-bash-profile&#34;&gt;PATH and .bash_profile&lt;/h1&gt;

&lt;h2 id=&#34;path&#34;&gt;PATH&lt;/h2&gt;

&lt;p&gt;The path is a list of directories that your shell will look through when you execute a command. You can display the path on your computer using the &lt;code&gt;echo $PATH&lt;/code&gt; command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ echo $PATH

/Library/Frameworks/Python.framework/Versions/3.7/bin:/Users/username/anaconda3/bin:/Library/Frameworks/Python.framework/Versions/2.7/bin:/Users/username/miniconda2/bin:/Users/username/miniconda3/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/usr/X11/bin:/usr/local/git/bin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The directories above are separated by a colon, this is what they look like displayed in sequence:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;/Library/Frameworks/Python.framework/Versions/3.7/bin&lt;/li&gt;
&lt;li&gt;/Users/username/anaconda3/bin&lt;/li&gt;
&lt;li&gt;/Library/Frameworks/Python.framework/Versions/2.7/bin&lt;/li&gt;
&lt;li&gt;/Users/username/miniconda2/bin&lt;/li&gt;
&lt;li&gt;/Users/username/miniconda3/bin&lt;/li&gt;
&lt;li&gt;/Library/Frameworks/Python.framework/Versions/3.6/bin&lt;/li&gt;
&lt;li&gt;/usr/local/bin&lt;/li&gt;
&lt;li&gt;/usr/bin&lt;/li&gt;
&lt;li&gt;/bin&lt;/li&gt;
&lt;li&gt;/usr/sbin&lt;/li&gt;
&lt;li&gt;/sbin&lt;/li&gt;
&lt;li&gt;/usr/texbin&lt;/li&gt;
&lt;li&gt;/opt/X11/bin&lt;/li&gt;
&lt;li&gt;/usr/X11/bin&lt;/li&gt;
&lt;li&gt;/usr/local/git/bin&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When you ask your shell to run a particular command or run an interpreter, &lt;code&gt;python&lt;/code&gt; for example, the shell looks through the different directories listed in the PATH in order they&amp;rsquo;re presented above. When the shell finds that command, it stops and calls it even if there is another version of the same command, with the same name, further down in the list.&lt;/p&gt;

&lt;h2 id=&#34;bash-profile&#34;&gt;.bash_profile&lt;/h2&gt;

&lt;p&gt;The bash profile is a set of instructions that are run by the shell when the user logs in to bash. You can add a &lt;a href=&#34;http://osxdaily.com/2011/10/03/add-a-separator-time-stamp-between-terminal-commands-to-increase-readability/&#34; target=&#34;_blank&#34;&gt;variety&lt;/a&gt; of &lt;a href=&#34;https://natelandau.com/my-mac-osx-bash_profile/&#34; target=&#34;_blank&#34;&gt;preferences&lt;/a&gt; to the bash profile, including modifications to the PATH. When anaconda, miniconda or other versions of python are installed they automatically add paths to their respective versions of python to the top of the bash profile.&lt;/p&gt;

&lt;p&gt;Bash reads the bash profile in sequential order &amp;mdash; from top to bottom &amp;mdash; and adds those paths to the PATH in the order that they&amp;rsquo;re read. This means that the &lt;em&gt;last&lt;/em&gt; path at the bottom of the bash profile will end up as the &lt;em&gt;first&lt;/em&gt; path in the PATH. This means that if you have Python 3.6 installed on your computer, and then decide to add python 3.7, but keep 3.6, the installer will add Python 3.7 to the top of the bash profile but it will end up &lt;em&gt;after&lt;/em&gt; python 3.6 in the PATH. Entering &lt;code&gt;python3&lt;/code&gt; in bash will call python 3.6, &lt;em&gt;not&lt;/em&gt; 3.7.&lt;/p&gt;

&lt;p&gt;If that was confusing compare the order that the python paths are added to my bash profile below to the PATH listed above. You&amp;rsquo;ll notice that their respective orders are opposite from each other.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Enter the following command to open the bash profile in TextEdit:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ open ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;My .bash_profile currently looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Setting PATH for Python 3.6
# The original version is saved in .bash_profile.pysave
PATH=&amp;quot;/Library/Frameworks/Python.framework/Versions/3.6/bin:${PATH}&amp;quot;
export PATH

# added by Miniconda3 installer
export PATH=&amp;quot;/Users/username/miniconda3/bin:$PATH&amp;quot;

# added by Miniconda2 installer
export PATH=&amp;quot;/Users/username/miniconda2/bin:$PATH&amp;quot;

# Setting PATH for Python 2.7
# The original version is saved in .bash_profile.pysave
PATH=&amp;quot;/Library/Frameworks/Python.framework/Versions/2.7/bin:${PATH}&amp;quot;
export PATH

# added by Anaconda3 installer
export PATH=&amp;quot;/Users/username/anaconda3/bin:$PATH&amp;quot;

# Setting PATH for Python 3.7
# The original version is saved in .bash_profile.pysave
PATH=&amp;quot;/Library/Frameworks/Python.framework/Versions/3.7/bin:${PATH}&amp;quot;
export PATH
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you want to keep all of your installed versions of python, but want bash to open a different version first, just copy and paste it to the &lt;strong&gt;bottom&lt;/strong&gt; of the bash profile. If you don&amp;rsquo;t want bash to run a particular version of python then delete it from bash profile and uninstall that version by following the instructions further down.&lt;/p&gt;

&lt;p&gt;Don&amp;rsquo;t forget to save the bash profile before closing TextEdit. You also have to reload the bash profile in bash before any changes take effect. Just enter one of the following commands:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;source ~/.bash_profile&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;. ~/.bash_profile&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;homebrew-pyenv&#34;&gt;Homebrew - pyenv&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/pyenv/pyenv&#34; target=&#34;_blank&#34;&gt;Pyenv&lt;/a&gt; is a &lt;a href=&#34;https://brew.sh&#34; target=&#34;_blank&#34;&gt;Homebrew&lt;/a&gt; package that allows a user to install multiple versions of python in Homebrew and specify which version of python they&amp;rsquo;d like to run.&lt;/p&gt;

&lt;p&gt;Install pyenv:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew install pyenv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install different versions of python:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pyenv install 3.5.0
$ pyenv install 3.6.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Show which versions of python are installed:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pyenv versions

* system (set by /Users/username/Programming/python/.python-version)
  3.5.0
  3.6.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The asterisk indicates that the system version of python is active, but 3.5.0 and 3.6.0 are also installed.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;pyenv-local&#34;&gt;Pyenv Local&lt;/h2&gt;

&lt;p&gt;Create a folder called &lt;code&gt;PythonLocalProject&lt;/code&gt;, then display the version of python called by bash by entering &lt;code&gt;python -V&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ python -V
Python 3.6.5 :: Anaconda, Inc.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now enter:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pyenv local 3.5.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This creates a &lt;code&gt;.python-version&lt;/code&gt; file which tells &lt;code&gt;pyenv&lt;/code&gt; which version of python to run in that directory.&lt;/p&gt;

&lt;p&gt;Entering &lt;code&gt;ls -la&lt;/code&gt; shows us that file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ls -la
total 8
drwxr-xr-x  3 username  staff   96 Aug  3 11:52 .
drwxr-xr-x  4 username  staff  128 Aug  3 11:56 ..
-rw-r--r--  1 username  staff    6 Aug  3 12:03 .python-version
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now enter &lt;code&gt;pyenv versions&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pyenv versions
  system
* 3.5.0 (set by /Users/username/Programming/python/pythonproject/.python-version)
  3.6.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And running this command shows which version of python is called by pyenv:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ python -V
Python 3.5.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To change pyenv to the system version of version 3.6.0 enter:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pyenv local system
$ pyenv local 3.6.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This procedure is fine, you can set a version of python to run in a particular folder. But what if you want to use pyenv to set a global version of python.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;pyenv-global&#34;&gt;Pyenv Global&lt;/h2&gt;

&lt;p&gt;Pyenv gives these instructions when you enter &lt;code&gt;pyenv init&lt;/code&gt; in bash:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pyenv init

# Load pyenv automatically by appending
# the following to ~/.bash_profile:

eval &amp;quot;$(pyenv init -)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Open the bash profile:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;open ~/.bash_profile&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Add this text to the bottom of the file:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;eval &amp;quot;$(pyenv init -)&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Save the file and then enter:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;source ~/.bash_profile&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Entering &lt;code&gt;echo $PATH&lt;/code&gt; will show that a pyenv shim has been added to the beginnning of the path:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/Users/username/.pyenv/shims:&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And &lt;code&gt;which python&lt;/code&gt; will return:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/Users/username/.pyenv/shims/python&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This means that bash will run the version of python set by pyenv.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Navigate to a folder that doesn&amp;rsquo;t have a &lt;code&gt;.python-version&lt;/code&gt; file and enter:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pyenv global 3.6.0
Python 3.6.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This shows us that the global version of python is 3.6.0 and it is set by &lt;code&gt;pyenv&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So this shows that bash will run whichever version of python that is set in pyenv.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;If you navigate back to the &lt;code&gt;PythonLocalProject&lt;/code&gt; folder with the &lt;code&gt;.python-version&lt;/code&gt; file and run &lt;code&gt;python -V&lt;/code&gt; you will notice that it doesn&amp;rsquo;t run the global version of python, it runs whichever version was last set with the &lt;code&gt;pyenv local&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;locate-python&#34;&gt;Locate Python&lt;/h1&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;We can use the &lt;code&gt;which&lt;/code&gt; command to identify where specific versions of python are located:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ which -a python
/Users/username/.pyenv/shims/python
/Users/username/anaconda3/bin/python
/Library/Frameworks/Python.framework/Versions/2.7/bin/python
/Users/username/miniconda2/bin/python
/Users/username/miniconda3/bin/python
/usr/local/bin/python
/usr/bin/python


$ which -a python3
/Users/username/.pyenv/shims/python3
/Library/Frameworks/Python.framework/Versions/3.7/bin/python3
/Users/username/anaconda3/bin/python3
/Users/username/miniconda3/bin/python3
/Library/Frameworks/Python.framework/Versions/3.6/bin/python3
/usr/local/bin/python3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This shows some overlap as some versions of python appear in both searches.&lt;/p&gt;

&lt;p&gt;The locations of the anaconda and miniconda versions of python are self explanatory, so are the pyenv installs, the python.org installer places python in the &lt;code&gt;/Library/Frameworks/Python.framework/&lt;/code&gt; directory. Homebrew installs all packages, including python, in &lt;code&gt;/usr/local/Cellar&lt;/code&gt;, then Homebrew adds a symlink to &lt;code&gt;/usr/local/bin&lt;/code&gt;so that it&amp;rsquo;s version of python can be found in the path. Finally, Apple installs python in &lt;code&gt;/usr/bin&lt;/code&gt;. Remember, don&amp;rsquo;t delete that version.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;uninstall-python&#34;&gt;Uninstall python&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;Follow these instructions if you want to remove particular versions of python.
&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;python-org&#34;&gt;python.org&lt;/h2&gt;

&lt;p&gt;The python.org installer places all it&amp;rsquo;s installed files in the following folders:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The system applications folder, &lt;code&gt;/Applications&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/Library/Frameworks/Python.framework&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/usr/local/bin&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To delete all versions of python that were installed using the python.org installer, enter these commands in terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo rm -rf &#39;/Applications/Python X.Y&#39; #replace X.Y with the version number on the folder
sudo rm -rf /Library/Frameworks/Python.framework
sudo rm -rf /usr/local/bin/python
sudo rm -rf /usr/local/bin/python3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To remove particular versions of python, you have to refer to the particular framework. The frameworks are installed in &lt;code&gt;/Library/Frameworks/Python.framework&lt;/code&gt; and particular versions are found in &lt;code&gt;/Library/Frameworks/Python.framework/Versions/X.Y&lt;/code&gt;. So for example if you wanted to uninstall only version 3.5 but leave other versions you would enter the following commands in bash:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo rm -rf /Library/Frameworks/Python.framework/Versions/3.5
sudo rm -rf &#39;/Applications/Python 3.5&#39;
sudo rm -rf /usr/local/bin/python3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;homebrew&#34;&gt;Homebrew&lt;/h2&gt;

&lt;p&gt;To uninstall python that was installed using homebrew you need to identify what versions of python have been installed by Homebrew:&lt;/p&gt;

&lt;p&gt;Enter:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew list | grep &#39;python&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Currently brew refers to python3 as &lt;code&gt;python&lt;/code&gt; and python 2 is called &lt;code&gt;python@2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To uninstall both python2 and python3 enter the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew uninstall -f python python@2 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Homebrew will refuse to uninstall python if it has dependencies, just uninstall python and ignore the dependencies:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew uninstall --ignore-dependencies python python@2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or, add the dependencies to the list of items to be uninstalled:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew uninstall -f python python@2 gdal geos libspatialite libxml2 numpy
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;troubleshooting&#34;&gt;Troubleshooting&lt;/h3&gt;

&lt;p&gt;It&amp;rsquo;s possible to have Homebrew&amp;rsquo;s Python directory at the beginning of the $PATH but calling &lt;code&gt;python&lt;/code&gt; will still start the Apple installed version of Python or some other version. If that&amp;rsquo;s the case it&amp;rsquo;s possible that Homebrew&amp;rsquo;s Python install has become unlinked. This command will unlink and relink Python in Homebrew:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew unlink python python@2 &amp;amp;&amp;amp; brew link python python@2
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;uninstall-python-from-pyenv&#34;&gt;Uninstall Python from Pyenv&lt;/h3&gt;

&lt;p&gt;To list versions of python installed using pyenv enter:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pyenv versions
* system (set by /Applications/.python-version)
  3.5.0
  3.6.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To uninstall versions of python installed using pyenv enter:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pyenv uninstall 3.5.0
$ pyenv uninstall 3.6.0
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;anaconda&#34;&gt;Anaconda&lt;/h2&gt;

&lt;p&gt;The official removal instructions are found &lt;a href=&#34;https://conda.io/docs/user-guide/install/macos.html#&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;, but deleting anaconda and miniconda is easy.&lt;/p&gt;

&lt;p&gt;Anaconda and miniconda are installed in the users home directory: &lt;code&gt;~/miniconda2&lt;/code&gt;, &lt;code&gt;~/miniconda3&lt;/code&gt;,&lt;code&gt;~/anaconda2&lt;/code&gt;, or &lt;code&gt;~/anaconda3&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Depending on which version or versions you have, just enter the following commands:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rm -rf ~/anaconda2
rm -rf ~/anaconda3
rm -rf ~/miniconda2
rm -rf ~/miniconda3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Anaconda and miniconda also use several invisible files. Delete them by entering this command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rm -rf ~/.condarc ~/.conda ~/.continuum
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;additional-resources&#34;&gt;Additional Resources&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://brew.sh&#34; target=&#34;_blank&#34;&gt;Homebrew&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.anaconda.com&#34; target=&#34;_blank&#34;&gt;Anaconda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.python.org&#34; target=&#34;_blank&#34;&gt;python.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pyenv/pyenv&#34; target=&#34;_blank&#34;&gt;pyenv package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pyenv/pyenv/blob/master/COMMANDS.md&#34; target=&#34;_blank&#34;&gt;pyenv commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/python/cpython/blob/master/Mac/README&#34; target=&#34;_blank&#34;&gt;Python Removal Instructions&lt;/a&gt; -  towards the bottom of the README file.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://osxdaily.com/2018/07/05/where-homebrew-packages-installed-location-mac/&#34; target=&#34;_blank&#34;&gt;OS X Daily - How to Find Where Homebrew Packages Are Installed on Mac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://conda.io/docs/user-guide/install/macos.html#&#34; target=&#34;_blank&#34;&gt;Official Conda Uninstall Instructions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://realpython.com/python-virtual-environments-a-primer/#using-different-versions-of-python&#34; target=&#34;_blank&#34;&gt;Real Python - Python Virtual Environments&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;xkcd&#34;&gt;XKCD&lt;/h1&gt;

&lt;p&gt;And now for something completely different.&lt;/p&gt;

&lt;p&gt;&lt;div style=&#34;text-align:center&#34;&gt;
&lt;a href=&#34;https://xkcd.com/1987/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://imgs.xkcd.com/comics/python_environment.png&#34; alt=&#34;The Python Environment&#34; /&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Reinstalling R Packages</title>
      <link>/portfolio/reinstalling-r-without-losing-packages/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 -0400</pubDate>
      
      <guid>/portfolio/reinstalling-r-without-losing-packages/</guid>
      <description>

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;When you reinstall R it deletes all of your installed packages and reinstalling them manually can be a nuisance. This is an easy way to automatically reinstall your R packages after you install a new version of R.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;before-reinstalling-r&#34;&gt;Before Reinstalling R&lt;/h2&gt;

&lt;p&gt;Before you reinstall R, use setwd() to set a directory where you can save a text file of all your currently installed packages.&lt;/p&gt;

&lt;p&gt;Run this command to create a text file in that directory called &amp;ldquo;Rpaackages&amp;rdquo;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;packages &amp;lt;- installed.packages()[,&amp;quot;Package&amp;quot;]
    save(packages, file=&amp;quot;Rpackages&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;reinstalling-r&#34;&gt;Reinstalling R&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org&#34; target=&#34;_blank&#34;&gt;Download R here&lt;/a&gt; and install according to the instructions.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;after-reinstalling-r&#34;&gt;After Reinstalling R&lt;/h2&gt;

&lt;p&gt;After R has been reinstalled, use setwd() to set R to the same directory where the list of packages was saved.&lt;/p&gt;

&lt;p&gt;Then run:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;load(&amp;quot;Rpackages&amp;quot;) 
    for (p in setdiff(packages, installed.packages()[,&amp;quot;Package&amp;quot;]))
    install.packages(p)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This may take a while depending on how many packages you have installed but it&amp;rsquo;s far faster than manually installing each package one at a time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Plain Markdown Post</title>
      <link>/post/2016-02-14-hello-markdown/</link>
      <pubDate>Sun, 14 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/2016-02-14-hello-markdown/</guid>
      <description>

&lt;p&gt;This sample post is mainly for &lt;a href=&#34;https://github.com/rstudio/blogdown&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;blogdown&lt;/strong&gt;&lt;/a&gt; users. If you do not use &lt;strong&gt;blogdown&lt;/strong&gt;, you can skip the first section.&lt;/p&gt;

&lt;h1 id=&#34;1-markdown-or-r-markdown&#34;&gt;1. Markdown or R Markdown&lt;/h1&gt;

&lt;p&gt;This is a post written in plain Markdown (&lt;code&gt;*.md&lt;/code&gt;) instead of R Markdown (&lt;code&gt;*.Rmd&lt;/code&gt;). The major differences are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You cannot run any R code in a plain Markdown document, whereas in an R Markdown document, you can embed R code chunks (&lt;code&gt;```{r}&lt;/code&gt;);&lt;/li&gt;
&lt;li&gt;A plain Markdown post is rendered through &lt;a href=&#34;https://gohugo.io/overview/configuration/&#34; target=&#34;_blank&#34;&gt;Blackfriday&lt;/a&gt;, and an R Markdown document is compiled by &lt;a href=&#34;http://rmarkdown.rstudio.com&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;rmarkdown&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;http://pandoc.org&#34; target=&#34;_blank&#34;&gt;Pandoc&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There are many differences in syntax between Blackfriday&amp;rsquo;s Markdown and Pandoc&amp;rsquo;s Markdown. For example, you can write a task list with Blackfriday but not with Pandoc:&lt;/p&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Write an R package.&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Write a book.&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; &amp;hellip;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Profit!&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Similarly, Blackfriday does not support LaTeX math and Pandoc does. I have added the MathJax support to this theme (&lt;a href=&#34;https://github.com/yihui/hugo-xmin&#34; target=&#34;_blank&#34;&gt;hugo-xmin&lt;/a&gt;) but there is a caveat for plain Markdown posts: you have to include math expressions in a pair of backticks (inline: &lt;code&gt;`$ $`&lt;/code&gt;; display style: &lt;code&gt;`$$ $$`&lt;/code&gt;), e.g., &lt;code&gt;$S_n = \sum_{i=1}^n X_i$&lt;/code&gt;.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:This-is-because&#34;&gt;&lt;a href=&#34;#fn:This-is-because&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; For R Markdown posts, you do not need the backticks, because Pandoc can identify and process math expressions.&lt;/p&gt;

&lt;p&gt;When creating a new post, I recommend you to use the RStudio addin &amp;ldquo;New Post&amp;rdquo;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://bookdown.org/yihui/blogdown/images/new-post.png&#34; alt=&#34;RStudio addin New Post&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;2-sample-text&#34;&gt;2. Sample Text&lt;/h1&gt;

&lt;h2 id=&#34;second-level-header&#34;&gt;Second-level header&lt;/h2&gt;

&lt;h3 id=&#34;third-level-header&#34;&gt;Third-level header&lt;/h3&gt;

&lt;h4 id=&#34;fourth-level-header&#34;&gt;Fourth-level header&lt;/h4&gt;

&lt;p&gt;A paragraph (with a footnote):&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lorem ipsum&lt;/strong&gt; dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore &lt;em&gt;magna aliqua&lt;/em&gt;. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:I-m-sure-you-are&#34;&gt;&lt;a href=&#34;#fn:I-m-sure-you-are&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;A blockquote (a gray bar at the left and lightgray background):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Quisque mattis volutpat lorem vitae feugiat. Praesent porta est quis porta imperdiet. Aenean porta, mi non cursus volutpat, mi est mollis libero, id suscipit orci urna a augue. In fringilla euismod lacus, vitae tristique massa ultricies vitae. Mauris accumsan ligula tristique, viverra nulla sed, porta sapien. Vestibulum facilisis nec nisl blandit convallis. Maecenas venenatis porta malesuada. Ut ac erat tortor. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nulla sodales quam sit amet tincidunt egestas. In et turpis at orci vestibulum ullamcorper. Aliquam sed ante libero. Sed hendrerit arcu lacus.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Some code (with a drop-shadow effect):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;(function() {
  var quotes = document.getElementsByTagName(&#39;blockquote&#39;), i, quote;
  for (i = 0; i &amp;lt; quotes.length; i++) {
    quote = quotes[i];
    var n = quote.children.length;
    if (n === 0) continue;
    var el = quote.children[n - 1];
    if (!el || el.nodeName !== &#39;P&#39;) continue;
    // right-align a quote footer if it starts with ---
    if (/^—/.test(el.textContent)) el.style.textAlign = &#39;right&#39;;
  }
})();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A table (centered by default):&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;Sepal.Length&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Sepal.Width&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Petal.Length&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Petal.Width&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Species&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;5.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;setosa&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;4.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;setosa&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;4.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;setosa&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;4.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;setosa&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;5.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;setosa&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;5.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;setosa&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;An image (automatically centered when it is appropriate):&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://slides.yihui.name/gif/happy-elmo.gif&#34; alt=&#34;Happy Elmo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Looks good?&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:This-is-because&#34;&gt;This is because we have to protect the math expressions from being interpreted as Markdown. &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:This-is-because&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:I-m-sure-you-are&#34;&gt;I&amp;rsquo;m sure you are bored by the text here. &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:I-m-sure-you-are&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>A Person Re-Identification System For Mobile Devices</title>
      <link>/publication/person-re-identification/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 -0400</pubDate>
      
      <guid>/publication/person-re-identification/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
